# Used by Bitbucket pipelines to trigger build of IGB project when you push to a fork or
# approve a pull request. 
#
# branch pipelines:
#   * run when a commit is made to master or topic branches, where topic branch names
#     match regex IGBF-* or release-*
#   * require read access to private repository with digital assets needed for Install4J
#     installer software to package IGB and jre into an installer
#
# default pipeline:
#   * runs when branch name does not match above
#
# Note: the build system creates a 32-bit installer for Windows systems, but since we
#       are not releasing this anymore, it is not copied to Downloads.
#
#       See Install4J configuration file, version-controlled in the project.
# 
#
# Image: https://hub.docker.com/r/lorainelab/igb-maven-install4j
# Dockerfile: https://bitbucket.org/lorainelab/integrated-genome-browser-docker
image:
  name: lorainelab/igb-maven-install4j:jre-1.8.0-212-mvn-deploy

definitions:
  steps:
     - step: &build-and-copy-installers-for-branch
         name: Build and copy Windows, MacOS, and Linux installers and excutable jar file for master or IGBF-labeled topic branch. 
         caches:
           - maven
         script:
            - wget --user $BITBUCKET_REPO_OWNER --password $BITBUCKET_PASSWORD $WINDOWS_KEYSTORE_LINK -P /opt/igb
            - wget --user $BITBUCKET_REPO_OWNER --password $BITBUCKET_PASSWORD $MAC_KEYSTORE_LINK -P /opt/igb
            - sed -i "s/_INSTALL4jLICENSE_/${INSTALL4J_LICENSE}/" /opt/atlassian/pipelines/agent/build/pom.xml
            - sed -i "s/_WINKEYSTOREPASSWORD_/${WIN_KEYSTORE_PASSWORD}/" /opt/atlassian/pipelines/agent/build/pom.xml
            - sed -i "s/_MACKEYSTOREPASSWORD_/${MAC_KEYSTORE_PASSWORD}/" /opt/atlassian/pipelines/agent/build/pom.xml
            - version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            - mvn -B install -P release-bitbucket-pipelines
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"igb_exe.jar; filename=$BITBUCKET_BRANCH.jar"
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"main/target/media/IGB-unix-$version.sh; filename=$BITBUCKET_BRANCH.sh"
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"main/target/media/IGB-windows-x64-$version.exe; filename=$BITBUCKET_BRANCH.exe"
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"main/target/media/IGB-macos-$version.dmg; filename=$BITBUCKET_BRANCH.dmg"
     - step: &build-and-copy-artifacts-for-release
         name: Build and copy Windows, MacOS, and Linux installers, executable jar file, updates.xml, and md5sums file for release to user community.
         caches:
           - maven
         script:
            - wget --user $BITBUCKET_REPO_OWNER --password $BITBUCKET_PASSWORD $WINDOWS_KEYSTORE_LINK -P /opt/igb
            - wget --user $BITBUCKET_REPO_OWNER --password $BITBUCKET_PASSWORD $MAC_KEYSTORE_LINK -P /opt/igb
            - sed -i "s/_INSTALL4jLICENSE_/${INSTALL4J_LICENSE}/" /opt/atlassian/pipelines/agent/build/pom.xml
            - sed -i "s/_WINKEYSTOREPASSWORD_/${WIN_KEYSTORE_PASSWORD}/" /opt/atlassian/pipelines/agent/build/pom.xml
            - sed -i "s/_MACKEYSTOREPASSWORD_/${MAC_KEYSTORE_PASSWORD}/" /opt/atlassian/pipelines/agent/build/pom.xml
            - version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
            - mvn -B install -P release-bitbucket-pipelines
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"igb_exe.jar; filename=IGB-$version.jar"
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"main/target/media/IGB-unix-$version.sh"
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"main/target/media/IGB-windows-$version.exe"
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"main/target/media/IGB-macos-$version.dmg"
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"main/target/media/md5sums"
            - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"main/target/media/updates.xml"

pipelines:
  default:
    - step:
        name: Build and copy jar file with IGB code and required libraries for branch not named IGBF-*, release-*, or master.
        caches:
          - maven
        script:
          - mvn -B install -P release-bitbucket-pipelines 
          - version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          - githash=$(git rev-parse --short HEAD)
          - curl -X POST "https://${BB_AUTH_STRING}@api.bitbucket.org/2.0/repositories/${BITBUCKET_REPO_OWNER}/${BITBUCKET_REPO_SLUG}/downloads" --form files=@"igb_exe.jar; filename=IGB-$version-$githash.jar"
  branches:
    master:
      - step: *build-and-copy-installers-for-branch
    IGBF-*: 
      - step: *build-and-copy-installers-for-branch
    release-*:
      - step: *build-and-copy-artifacts-for-release
  custom:
    release-to-nexus.bioviz.org:
        - step:
           caches:
               - maven
           script:
               - mvn deploy -P release-to-nexus.bioviz.org -s /root/.m2/settings.xml -Drepo.username=${NEXUS_USER} -Drepo.password=${NEXUS_PASSWORD} -Drepo.id=${NEXUS_REPOSITORY_ID}

            




