/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ModChromeInfoURL.java
 *
 * Created on Sep 27, 2011, 12:00:21 PM
 */
package edu.uncc.bioinformatics.quickloadbuilder;

import edu.uncc.bioinformatics.quickloadbuilder.QuickloadSourceValidator.ErrorListener;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.URLConnection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;

/**
 *
 * @author jfvillal
 */
public class ModChromeInfoURL extends javax.swing.JPanel {

    /** Creates new form ModChromeInfoURL */
      SelectSequenceFiles Parent;
    public ModChromeInfoURL(  SelectSequenceFiles parent) {
        initComponents();
        Parent = parent;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UrlField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Error = new javax.swing.JLabel();

        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(edu.uncc.bioinformatics.quickloadbuilder.QuickLoadArchiveBuilderApp.class).getContext().getResourceMap(ModChromeInfoURL.class);
        UrlField.setText(resourceMap.getString("UrlField.text")); // NOI18N
        UrlField.setName("UrlField"); // NOI18N
        UrlField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                UrlFieldCaretUpdate(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        Error.setText(resourceMap.getString("Error.text")); // NOI18N
        Error.setName("Error"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UrlField, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(Error, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UrlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Error, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    public String getUrl(){
        if( isValid()){
            return UrlField.getText();
        }else{
            return null;
        }
    }
    public boolean isValid(){
        return Valid;
    }
    boolean Valid;
    
    String UriErrorString;
    public boolean validateEntries(){
        String url_string = UrlField.getText();
        Valid = QuickloadSourceValidator.validateModchromeURI(url_string, new ErrorListener(){
            public void setError(String error) {
                UriErrorString = error;
            }
        });
        return Valid;
    }
    URI UriValue; 
    private void UrlFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_UrlFieldCaretUpdate
        Valid = validateEntries();      
        updateGUI();
    }//GEN-LAST:event_UrlFieldCaretUpdate

    public void updateGUI( ){
        if( !Valid){
            Parent.getFaceParent().disableNext();
            Error.setText( C.getRed( UriErrorString));
            UrlField.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red) );
        }else{
            Parent.getFaceParent().enableNext();
            Error.setText( "" );
            UrlField.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.green) );
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Error;
    private javax.swing.JTextField UrlField;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
