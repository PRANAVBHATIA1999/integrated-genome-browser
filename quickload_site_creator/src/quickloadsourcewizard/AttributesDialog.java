/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AttributesDialog.java
 *
 * Created on Sep 11, 2011, 8:46:35 PM
 */
package quickloadsourcewizard;

import java.awt.BorderLayout;
import java.awt.ComponentOrientation;
import java.awt.LayoutManager;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import org.jdesktop.application.Action;


/**
 * This GUI class holds multiple OneRecord instances.  This is used to allow 
 * the user to set the attriburtes for each file tag in the annotations file.
 * @author jfvillal
 */
public class AttributesDialog extends javax.swing.JDialog {

    OneRecord[] Records;
    String SpeciesDescription;
    String OutputPath;
    String InputPath;
    String SpeciesName;
    /** Creates new form AttributesDialog */
    public AttributesDialog(java.awt.Frame parent, boolean modal, QuickloadSourceCreator creator, String species_description
            , String input, String output, String species ) {
        super(parent, modal);
        
        SpeciesDescription = species_description;
        InputPath = input;
        OutputPath = output;
        SpeciesName = species;
        
        initComponents();
        
        mPanel.setLayout(new BoxLayout(mPanel, BoxLayout.PAGE_AXIS));
        //for each file to be put into annot.xml, add one OneRecord instance.
        Records = new OneRecord[creator.AnnotationFiles.size()];//to test for now.
        for( int i = 0 ; i < creator.AnnotationFiles.size(); i++){
            Records[i] = new OneRecord();
            Records[i].getNameLabel().setText( creator.AnnotationFiles.get(i).getName() );
            mPanel.add(Records[i]);
        }
        /*OneRecord record = new OneRecord();
        mPanel.add( record );
        OneRecord record2 = new OneRecord();
        mPanel.add( record2 );*/
        this.pack();
       /* JButton button = new JButton();
        button.setText("hello");
        LayoutManager layout = this.getContentPane().getLayout(); //.addLayoutComponent(null, button);
    
        JPanel contentPane = new JPanel(new BorderLayout());
        contentPane.setBorder(Border.Factory.createEmptyBorder());
        contentPane.add( button, BorderLayout.CENTER);
        
        //label.setText("Changed");

        this.setContentPane(contentPane);
        */
    }

    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        CommitButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(quickloadsourcewizard.QuickloadSourceWizardApp.class).getContext().getResourceMap(AttributesDialog.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        CommitButton.setText(resourceMap.getString("CommitButton.text")); // NOI18N
        CommitButton.setName("CommitButton"); // NOI18N
        CommitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CommitButtonActionPerformed(evt);
            }
        });

        CancelButton.setText(resourceMap.getString("CancelButton.text")); // NOI18N
        CancelButton.setName("CancelButton"); // NOI18N
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        mPanel.setName("mPanel"); // NOI18N

        javax.swing.GroupLayout mPanelLayout = new javax.swing.GroupLayout(mPanel);
        mPanel.setLayout(mPanelLayout);
        mPanelLayout.setHorizontalGroup(
            mPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 902, Short.MAX_VALUE)
        );
        mPanelLayout.setVerticalGroup(
            mPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 597, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(mPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(CommitButton)
                        .addGap(18, 18, 18)
                        .addComponent(CancelButton))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelButton)
                    .addComponent(CommitButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelButtonActionPerformed
    @SuppressWarnings("unchecked")
    private void CommitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CommitButtonActionPerformed
        try {
            
            //create a list of maps with the information from the OneRecord records
            
            Map<String,String>[] values = new HashMap[Records.length];
            int i = 0;
            for( OneRecord record : Records){
                values[i] = new HashMap<String,String>();
                String checked = "";
                if( record.getLoadHintCheckBox().isSelected() ){
                    checked = QuickloadSourceCreator.CHECKED;
                }else{
                    checked = "not_checked";
                }

                values[i].put( QuickloadSourceCreator.ANNOT_DESCRIPTION, record.getDescriptionTextField().getText() );
                values[i].put( QuickloadSourceCreator.ANNOT_URL, record.getUrlTextField().getText() );
                values[i].put( QuickloadSourceCreator.ANNOT_TITLE, record.getTitleTextField().getText() );
                values[i].put( QuickloadSourceCreator.ANNOT_LOAD_HINT, checked );
                values[i].put( QuickloadSourceCreator.ANNOT_DESCRIPTION, record.getDescriptionTextField().getText() );
                values[i].put( QuickloadSourceCreator.ANNOT_LABEL_FIELD, record.getLabelTextField().getText());

                ++i;
            }
            //get species description from parent 

            //create creator and excute file creation.

            QuickloadSourceCreator creator = new QuickloadSourceCreator();
            creator.setOutputPath( OutputPath);
            creator.setSourcePath( InputPath );
            creator.setSpeciesName(SpeciesName);


            //basic file creation with place holders
            creator.generateFiles( SpeciesDescription, values);
                
            
            this.dispose();
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(AttributesDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerConfigurationException ex) {
            Logger.getLogger(AttributesDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TransformerException ex) {
            Logger.getLogger(AttributesDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AttributesDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AttributesDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(AttributesDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CommitButtonActionPerformed


    @Action
    public void doChange() {
         JButton button = new JButton();
        button.setText("hello");
        LayoutManager layout = this.getContentPane().getLayout(); //.addLayoutComponent(null, button);
    
        JPanel contentPane = new JPanel(new BorderLayout());
        contentPane.setBorder(BorderFactory.createEmptyBorder());
        contentPane.add( button, BorderLayout.CENTER);
        
        label.setText("Changed");

        this.setContentPane(contentPane);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JButton CommitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mPanel;
    // End of variables declaration//GEN-END:variables
    private JLabel label;
}
