<project>
	<import file="common.xml" />

  <target name="init">
		<!-- Locations of subprojets -->
		<property name="genoviz"       value="${basedir}/../genoviz_sdk" />
		<property name="genometry"     value="${basedir}/../genometry" />
		<property name="genometryImpl" value="${basedir}/../genometryImpl" />
		<property name="igb"           value="${basedir}/../igb" />
		<property name="das2server"    value="${basedir}/../das2_server" />

		<!-- directory paths -->
		<property name="lib.dir"      value="${basedir}/../ext" />
		<property name="src.dir"      value="${basedir}/src "/>
		<property name="rsrc.dir"     value="${basedir}/resources" />
		<property name="build.dir"    value="${basedir}/build" />
		<property name="docs.dir"     value="${basedir}/docs" />

		<!-- JUnit test configuration -->
		<property name="test.src.dir"    value="${basedir}/test" />
		<property name="test.build.dir"  value="${basedir}/build-test" />
		<property name="test.report.dir" value="${test.build.dir}" />

		<!-- property list file -->
		<property file="${basedir}/ant.properties" />
  </target>

  <target name="compile" depends="common-init">
		<mkdir dir="${build.dir}" />
		<my.javac destdir="${build.dir}" />
  </target>

  <target name="compile-tests" depends="compile">
    <mkdir dir="${test.build.dir}" />
		<my.javac srcdir="${test.src.dir}" destdir="${test.build.dir}" classpath="${junit.jar}:${test.classpath}" />
  </target>

	<target name="test" depends="compile-tests">
		<mkdir dir="${test.report.dir}" />

		<condition property="junit.printsummary" value="false" else="true">
			<and>
				<isset property="build.compiler.emacs" />
			</and>
		</condition>
		<condition property="junit.showoutput" else="false">
			<and>
				<isset property="build.compiler.emacs" />
			</and>
		</condition>

		<junit fork="true" printsummary="${junit.printsummary}" showoutput="${junit.showoutput}" haltonfailure="false" dir="${basedir}">
			<classpath path="${junit.jar}:${test.classpath}" />
			<formatter usefile="false" type="brief" if="build.compiler.emacs" />
			<formatter type="xml" />
			<batchtest todir="${test.build.dir}" >
				<fileset dir="${test.build.dir}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${test.report.dir}">
			<fileset dir="${test.build.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${test.report.dir}" />
		</junitreport>
	</target>

  <target name="jar" depends="compile">
		<mkdir dir="${dist.dir}" />
		<jar jarfile="${dist.dir}/${jarfile}" update="false">
			<fileset dir="${build.dir}" />
			<fileset dir="${rsrc.dir}" />
    </jar>
  </target>

	<target name="webstart" depends="jar">
		<mkdir dir="${webstart.dir}" />
		<my.signjar jar="${dist.dir}/${jarfile}" signedjar="${webstart.dir}/${jarfile}" />
	</target>

	<target name="webapp" depends="jar">
		<mkdir dir="${webapp.dir}/WEB-INF/lib" />
		<copy file="${dist.dir}/${jarfile}" todir="${webapp.dir}/WEB-INF/lib" />
	</target>

	<target name="all" depends="jar" />

	<target name="docs" depends="common-init" description="Builds javadocs">
		<mkdir dir="${docs.dir}"/>
		<my.javadoc sourcepath="${src.dir}" classpath="${classpath}" />
	</target>

	<target name="clean" depends="common-init">
    <delete file="${component}.jar"/>
		<delete dir="${docs.dir}"/>
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${test.build.dir}" />
		<delete dir="${test.report.dir}" />
  </target>
</project>
