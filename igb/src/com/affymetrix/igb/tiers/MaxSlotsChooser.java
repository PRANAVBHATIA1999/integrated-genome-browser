/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.affymetrix.igb.tiers;

import javax.swing.JTextField;

/**
 *
 * @author blossome
 */
public class MaxSlotsChooser extends javax.swing.JPanel {

	private Integer optimum = 5;
	private final Integer unlimitted = 0;
	/**
	 * Creates new form MaxSlotsChooser
	 */
	public MaxSlotsChooser(String theMessage, int theInitialValue, int theOptimalValue) {
		initComponents();
		this.message.setText(theMessage);
		this.maxSlots.setText(Integer.toString(theInitialValue));
		this.optimum = theOptimalValue;
		this.Optimizer.setText(this.Optimizer.getText() + ": " + this.optimum);
	}

	@Override
	public String toString() {
		return this.maxSlots.getText();
	}
	
	public Integer getValue() {
		// What about parsing exceptions?
		return Integer.parseInt(maxSlots.getText());
	}
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        maxSlots = this.maxSlots = new javax.swing.JFormattedTextField(new java.text.DecimalFormat("###0"));
        Optimizer = new javax.swing.JButton();
        Unlimitter = new javax.swing.JButton();
        message = new javax.swing.JLabel();

        maxSlots.setColumns(5);
        maxSlots.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        maxSlots.setToolTipText("An integer.");

        Optimizer.setText("Optimal");
        Optimizer.setToolTipText("Deep enough to fit the deepest stack visible now.");
        Optimizer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OptimizerMouseClicked(evt);
            }
        });

        Unlimitter.setText("Unlimited");
        Unlimitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UnlimitterMouseClicked(evt);
            }
        });

        message.setText("max stack size");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(maxSlots, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 86, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Optimizer)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Unlimitter)
                        .add(0, 53, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(14, 14, 14)
                        .add(message, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(message)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(maxSlots, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(Optimizer)
                    .add(Unlimitter))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	public MaxSlotsChooser(JTextField maxSlots) {
		this.maxSlots = maxSlots;
	}

	private void UnlimitterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UnlimitterMouseClicked
		maxSlots.setText(this.unlimitted.toString());
	}//GEN-LAST:event_UnlimitterMouseClicked

	private void OptimizerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OptimizerMouseClicked
		maxSlots.setText(this.optimum.toString());
	}//GEN-LAST:event_OptimizerMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Optimizer;
    private javax.swing.JButton Unlimitter;
    private javax.swing.JTextField maxSlots;
    private javax.swing.JLabel message;
    // End of variables declaration//GEN-END:variables
}
