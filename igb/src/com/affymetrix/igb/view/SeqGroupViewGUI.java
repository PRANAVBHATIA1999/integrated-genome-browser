package com.affymetrix.igb.view;

import static com.affymetrix.igb.IGBConstants.BUNDLE;

import com.affymetrix.igb.osgi.service.IGBService;
import com.affymetrix.igb.osgi.service.IGBTabPanel;

import java.awt.Dimension;
import javax.swing.BoxLayout;
import javax.swing.JScrollPane;
import javax.swing.JTable;

public class SeqGroupViewGUI extends IGBTabPanel {

	private static final long serialVersionUID = 1L;
	private static final int TAB_POSITION = 7;
	private final JTable seqtable;
	private static SeqGroupViewGUI singleton;
	private static SeqGroupView seqGroupModel;

	public static void init(IGBService _igbService) {
		singleton = new SeqGroupViewGUI(_igbService);
	}

	public static SeqGroupViewGUI getInstance() {
		return singleton;
	}

	private SeqGroupViewGUI(IGBService _igbService) {
		super(_igbService, BUNDLE.getString("sequenceTab"), BUNDLE.getString("sequenceTab"), true, TAB_POSITION);

		SeqGroupView.init(_igbService);
	    seqGroupModel = SeqGroupView.getInstance();

		seqtable = seqGroupModel.getTable();

		JScrollPane scroller = new JScrollPane(seqtable);

		this.setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
		this.add(scroller);

		initComponents();
	}

	@Override
	public Dimension getMinimumSize() {
		return new Dimension(220, 50);
	}

	@Override
	public Dimension getPreferredSize() {
		return new Dimension(220, 50);
	}

	@Override
	public TabState getDefaultState() {
		return TabState.COMPONENT_STATE_RIGHT_TAB;
	}

	@Override
	public boolean isEmbedded() {
		return true;
	}

	@Override
	public boolean isCheckMinimumWindowSize() {
		return true;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        currentSequenceTable = seqtable;
        speciesPanel = new javax.swing.JPanel();
        speciesCB = speciesCB = seqGroupModel.getSpeciesCB();
        genomeVersionPanel = new javax.swing.JPanel();
        versionCB = seqGroupModel.getVersionCB();

        currentSequenceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(currentSequenceTable);

        speciesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Species"));

        org.jdesktop.layout.GroupLayout speciesPanelLayout = new org.jdesktop.layout.GroupLayout(speciesPanel);
        speciesPanel.setLayout(speciesPanelLayout);
        speciesPanelLayout.setHorizontalGroup(
            speciesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(speciesCB, 0, 182, Short.MAX_VALUE)
        );
        speciesPanelLayout.setVerticalGroup(
            speciesPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(speciesCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        genomeVersionPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Genome Version"));

        org.jdesktop.layout.GroupLayout genomeVersionPanelLayout = new org.jdesktop.layout.GroupLayout(genomeVersionPanel);
        genomeVersionPanel.setLayout(genomeVersionPanelLayout);
        genomeVersionPanelLayout.setHorizontalGroup(
            genomeVersionPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(versionCB, 0, 182, Short.MAX_VALUE)
        );
        genomeVersionPanelLayout.setVerticalGroup(
            genomeVersionPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(versionCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(speciesPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(genomeVersionPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(speciesPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(genomeVersionPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable currentSequenceTable;
    private javax.swing.JPanel genomeVersionPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox speciesCB;
    private javax.swing.JPanel speciesPanel;
    private javax.swing.JComboBox versionCB;
    // End of variables declaration//GEN-END:variables
}
