package com.affymetrix.igb.prefs;

import com.affymetrix.genometryImpl.parsers.graph.ScoredIntervalParser;
import com.affymetrix.genometryImpl.style.HeatMap;
import com.affymetrix.genometryImpl.util.GraphSymUtils;
import com.affymetrix.genometryImpl.util.PreferenceUtils;

/**
 *  A panel that shows the preferences for graph properties.
 */
public class GraphsView extends IPrefEditorComponent {
	private final String urlString = "Use file URL as graph name";
	private final String makeGraphString = "Make graphs from scored interval ('egr' and 'sin') files";
	
	/** Creates new form GraphView */
	public GraphsView() {
		super();
		setName("Graphs");
		setToolTipText("Edit Default Graph Properties");
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        final javax.swing.JCheckBox useUrl = PreferenceUtils.createCheckBox(
            urlString,
            PreferenceUtils.getGraphPrefsNode(),
            GraphSymUtils.PREF_USE_URL_AS_NAME,
            GraphSymUtils.default_use_url_as_name);
        final javax.swing.JCheckBox makeGraph = PreferenceUtils.createCheckBox(
            makeGraphString,
            PreferenceUtils.getTopNode(),
            ScoredIntervalParser.PREF_ATTACH_GRAPHS,
            ScoredIntervalParser.default_attach_graphs);
        final javax.swing.JLabel heatmapLabel = new javax.swing.JLabel();
        final javax.swing.JComboBox heatmapCombo = PreferenceUtils.createComboBox(
            PreferenceUtils.getTopNode(),
            HeatMap.PREF_HEATMAP_NAME,
            HeatMap.getStandardNames(),
            HeatMap.def_heatmap_name.toString());

        heatmapLabel.setLabelFor(heatmapCombo);
        heatmapLabel.setText("Preferred Heatmap");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(useUrl)
                            .add(makeGraph)))
                    .add(layout.createSequentialGroup()
                        .add(22, 22, 22)
                        .add(heatmapLabel)
                        .add(18, 18, 18)
                        .add(heatmapCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(203, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(30, 30, 30)
                .add(useUrl)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(makeGraph)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(heatmapCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(heatmapLabel))
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

	@Override
	public void refresh() { }
}
