package com.affymetrix.igb.view;

import com.affymetrix.igb.view.load.GeneralLoadUtils;
import com.jidesoft.hints.ListDataIntelliHints;
import java.util.regex.Pattern;

/**
 *
 * @author hiralv
 */
public class NewGenome extends javax.swing.JPanel {
	private static final Pattern space_regex = Pattern.compile("\\s+");
	
	/**
	 * Creates new form NewGenome
	 */
	public NewGenome() {
		initComponents();
	}

	public String getSpeciesName(){
		return speciesTextField.getText();
	}
	
	public String getVersionName(){
		return versionTextField.getText();
	}
	
	public boolean shouldSwitch(){
		return switchCheckBox.isSelected();
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        speciesLabel = new javax.swing.JLabel();
        speciesTextField = new javax.swing.JTextField();
        versionLabel = new javax.swing.JLabel();
        versionTextField = new javax.swing.JTextField();
        switchCheckBox = new javax.swing.JCheckBox();

        speciesLabel.setText("Species Name");

        ListDataIntelliHints<String> hints = new ListDataIntelliHints<String>(speciesTextField, GeneralLoadUtils.getSpecies2Generic().keySet().toArray(new String[1]));

        versionLabel.setText("Genome Version");

        versionTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                versionTextFieldFocusGained(evt);
            }
        });

        switchCheckBox.setText("Switch to new species after creating it");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(5, 5, 5)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(versionLabel)
                    .add(speciesLabel))
                .add(5, 5, 5)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(speciesTextField)
                    .add(versionTextField))
                .add(5, 5, 5))
            .add(layout.createSequentialGroup()
                .add(switchCheckBox)
                .add(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(5, 5, 5)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(speciesLabel)
                    .add(speciesTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(versionLabel)
                    .add(versionTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(10, 10, 10)
                .add(switchCheckBox)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void versionTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_versionTextFieldFocusGained
        if(getVersionName().length() == 0 && getSpeciesName().length() > 2){
			String[] species = space_regex.split(getSpeciesName());
			if(species.length > 1){
				StringBuilder version = new StringBuilder();
				version.append(species[0].toUpperCase().charAt(0));
				for(int i=1; i<species.length; i++){
					version.append("_").append(species[i].toLowerCase());
				}
				version.append("_");
				versionTextField.setText(version.toString());
			}
		}
    }//GEN-LAST:event_versionTextFieldFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel speciesLabel;
    private javax.swing.JTextField speciesTextField;
    private javax.swing.JCheckBox switchCheckBox;
    private javax.swing.JLabel versionLabel;
    private javax.swing.JTextField versionTextField;
    // End of variables declaration//GEN-END:variables
}
