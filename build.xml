<!--                                                                 -->
<!-- Test file for new, improved build system.  There are still a    -->
<!-- number of problems to be worked out.  This files does not yet   -->
<!-- have test, demo, or run targets. The test and demo targets may  -->
<!-- have to be one off, or the targets need to be added to all sub- -->
<!-- projects via the common.xml.  The common.xml should also be     -->
<!-- be able to be used on a sub-project alone.                      -->
<!--                                                                 -->
<project name="IGB" basedir=".">
	<property name="props" value="${basedir}/build.properties" />
	<property file="${props}" />
	<import file="common.xml" />

	<target name="init">
		<property name="name" value="Integrated Genome Browser" />

		<!-- Locations of subprojects -->
		<property name="main"                value="${basedir}/main" />
		<property name="common"              value="${basedir}/common" />
		<property name="genoviz"             value="${basedir}/genoviz_sdk" />
		<property name="genometry"           value="${basedir}/genometryImpl" />
		<property name="igb"                 value="${basedir}/igb" />
		<property name="igb-18n"             value="${basedir}/igb-i18n" />
		<property name="das2server"          value="${basedir}/das2_server" />
		<property name="protannot"           value="${basedir}/protannot" />
		<property name="igb_service"         value="${basedir}/plugins/igb_service" />
		<property name="window_service"      value="${basedir}/plugins/window_service" />
		<property name="window_service_def"  value="${basedir}/plugins/window_service_def" />

		<!-- Locations of optional bundle subprojects -->
		<property name="plugins_page"        value="${basedir}/plugins/plugins_page" />
		<property name="RestrictionSites"    value="${basedir}/plugins/RestrictionSites" />
		<property name="ExternalView"        value="${basedir}/plugins/ExternalView" />
		<property name="PropertyView"        value="${basedir}/plugins/PropertyView" />
		<property name="SearchView"          value="${basedir}/plugins/SearchView" />
		<property name="GraphAdjuster"       value="${basedir}/plugins/GraphAdjuster" />
		<property name="Bookmark"            value="${basedir}/plugins/Bookmark" />
		<property name="SearchModeIdOrProps" value="${basedir}/plugins/SearchModeIdOrProps" />
		<property name="SearchModeResidue"   value="${basedir}/plugins/SearchModeResidue" />
		<property name="Tutorial"            value="${basedir}/plugins/Tutorial" />

		<!-- directory paths -->
		<property name="lib.dir"     value="${basedir}/ext" />
		<property name="etc.dir"     value="${basedir}/etc" />
		<property name="demos.dir"   value="${genoviz}/demo" />
		<property name="docs.dir"    value="${basedir}/doc/api" />
		<property name="report.dir"  value="${basedir}/reports" />
		<property name="bundle.dir"  value="${basedir}/bundles" />
		<property name="igb.ant.dir" value="${basedir}/plugins/ant" />

		<property name="javadoc.src.path"   value="${genoviz}/src:${genoviz}/test:${genoviz}/demo/src:${genometry}/src:${genometry}/test:${igb}/src:${igb}/test:${das2server}/src:${das2server}/test:${protannot}/src:${igb_service}/src:${window_service}/src" />
		<property file="${common}/resources/common.properties"/>
	</target>

	<target name="compile" depends="common-init" description="Compile all genoviz subprojects">
		<iterate target="compile" />
	</target>

	<target name="flex" if="should_compile_flex" depends="common-init" description="Compile Flex GenoPub application">
		<taskdef resource="flexTasks.tasks" classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>
		
		<mxmlc fork="true" maxmemory="128m" file="${das2server}/flex/GenoPub.mxml" output="${webapp.dir}/GenoPub.swf">
			<theme dir="${FLEX_HOME}/frameworks/themes/Halo">
					       <include name="halo.swc" />
					</theme>
			<load-config filename="${FLEX_HOME}/frameworks/flex-config.xml"/>
	        <source-path path-element="${FLEX_HOME}/frameworks"/>
			    <compiler.debug>true</compiler.debug>
		</mxmlc>
		<html-wrapper
		      title="GenoPub"
		      file="GenoPub.html"
		      width="100%"
		      height="100%"
		      application="GenoPub"
		      swf="GenoPub"
		      version-major="10"
		      version-minor="0"
		      version-revision="0"
		      history="false"
		      output="${webapp.dir}"/>
	</target>

	<target name="demos" depends="jar" description="Compile genoviz demos">
		<!--<ant antfile="${basedir}/generic.xml" dir="${basedir}/genoviz_sdk" target="docs">
			<property name="docs.dir"   value="${basedir}/genoviz_sdk/docs" />
		</ant>-->
		<my.javac srcdir="${demos.dir}/src" destdir="${demos.dir}" classpath="${genoviz}/build" />

		<copy file="${dist.dir}/genoviz.jar" todir="${demos.dir}" />
	</target>

	<target name="compile-tests" depends="common-init">
		<iterate target="compile-tests" />
	</target>

	<target name="check-nullness" depends="common-init" description="Check all genoviz subprojects for null references not satisfied by contract">
		<iterate target="check-nullness" />
	</target>

	<target name="test" depends="common-init" description="Run unit tests for all genoviz subprojects">
		<iterate target="test" />
	</target>

	<target name="copy-bundle-if" description="copy a bundle to bundle dir" unless="${jar_name}.present">
		<java jar="${lib.dir}/biz.aQute.bnd.jar" fork="true" dir="${lib.dir}" >
			<arg value="wrap"/>
			<arg value="${jar_name}.jar"/>
		</java>
		<move file="${lib.dir}/${jar_name}.bar" tofile="${bundle.dir}/${jar_name}.bnd.jar" filtering="false" />
	</target>

	<target name="copy-bundle" description="copy bundles to bundle dir">
		<available file="${bundle.dir}/${jar_name}.bnd.jar" property="${jar_name}.present"/>
		<antcall target="copy-bundle-if">
    			<param name="jar_name" value="${jar_name}"/>
		</antcall>
	</target>

	<target name="copy-bundles" description="copy bundles to bundle dir">
		<mkdir dir="${bundle.dir}" />
		<antcall target="copy-bundle">
    			<param name="jar_name" value="affx_fusion"/>
		</antcall>
		<copy file="${lib.dir}/BigWig.jar" tofile="${bundle.dir}/BigWig.jar" filtering="false" />
		<antcall target="copy-bundle">
    			<param name="jar_name" value="colt"/>
		</antcall>
		<copy file="${lib.dir}/commons-codec-1.4.jar" tofile="${bundle.dir}/commons-codec-1.4.jar" filtering="false" />
		<antcall target="copy-bundle">
    			<param name="jar_name" value="commons-net-2.0"/>
		</antcall>
		<antcall target="copy-bundle">
    			<param name="jar_name" value="freehep-2.1.1"/>
		</antcall>
		<antcall target="copy-bundle">
    			<param name="jar_name" value="image4j"/>
		</antcall>
		<antcall target="copy-bundle">
    			<param name="jar_name" value="jide"/>
		</antcall>
		<antcall target="copy-bundle">
    			<param name="jar_name" value="jlfgr-1_0"/>
		</antcall>
		<echo message='***** please ignore error message "Your bnd file contains a header called &apos;Name&apos;..." for jlfgr-1_0 *****' />
		<echo message='***** please ignore error message "Your bnd file contains a header called &apos;Name&apos;..." for jlfgr-1_0 *****' />
		<echo message='***** please ignore error message "Your bnd file contains a header called &apos;Name&apos;..." for jlfgr-1_0 *****' />
		<antcall target="copy-bundle">
    			<param name="jar_name" value="jython"/>
		</antcall>
		<antcall target="copy-bundle">
    			<param name="jar_name" value="log4j-1.2.11"/>
		</antcall>
		<antcall target="copy-bundle">
    			<param name="jar_name" value="picard"/>
		</antcall>
		<antcall target="copy-bundle">
    			<param name="jar_name" value="sam"/>
		</antcall>
		<antcall target="copy-bundle">
    			<param name="jar_name" value="swing-layout"/>
		</antcall>
		<antcall target="copy-bundle">
    			<param name="jar_name" value="tribble-0.1"/>
		</antcall>
	</target>

	<target name="jar" depends="common-init,copy-bundles" description="Create jar files for all genoviz subprojects">
		<iterate target="jar" />
	</target>

	<target name="webstart" depends="exe" description="Create webstart-compatible IGB jars">
		<mkdir dir="${webstart.dir}" />

		<delete file="${webstart.dir}/das2server.jar" />

		<my.signjar jar="${basedir}/${igb.jar.name}.jar" signedjar="${webstart.dir}/${igb.jar.name}.jar" />
		<my.signjar jar="${dist.dir}/igb-i18n.jar" signedjar="${webstart.dir}/igb-i18n.jar" />

		<copy file="${igb}/resources/igb_default_prefs.xml" tofile="${webstart.dir}/igb_prefs.xml" />
		<copy file="${jnlp.file.path}" tofile="${webstart.dir}/igb.jnlp" filtering="true" overwrite="true" />
		<copy file="${jnlp.largefile.path}" tofile="${webstart.dir}/igb-large.jnlp" filtering="true" overwrite="true" />
		<copy file="${jnlp.5GB.path}" tofile="${webstart.dir}/igb-5GB.jnlp" filtering="true" overwrite="true" />
		<copy file="${jnlp.basefile.path}" tofile="${webstart.dir}/igb-base.jnlp" filtering="true" overwrite="true" />
		<copy file="${jnlp.icon.path}" tofile="${webstart.dir}/${jnlp.icon.name}" />
<!--		<copy file="${jnlp.splashicon.path}" tofile="${webstart.dir}/${jnlp.splashicon.name}" />-->
	</target>

	<target name="webapp" depends="jar,flex" description="Create das2servlet web application">
		<mkdir dir="${webapp.dir}/WEB-INF/classes" />
		<mkdir dir="${webapp.dir}/WEB-INF/lib" />

		<copy todir="${webapp.dir}" overwrite="true">
			<fileset dir="${das2server}">
				<include name="*.css" />
				<include name="index.html" />
				<include name="*.ico" />
				<include name="*.png" />
			</fileset>
		</copy>

		<copy todir="${webapp.dir}/WEB-INF/classes">
			<fileset dir="${das2.resources}">
				<include name="das2Registry.xml" />
				<include name="logging.properties" />
			</fileset>
		</copy>

		<copy todir="${webapp.dir}/WEB-INF/lib">
			<fileset dir="${lib.dir}">
				<include name="hibernate3.jar"/>
				<include name="image4.jar" />
				<include name="org.mortbay.jetty.jar"/>
				<include name="sam.jar" />
				<include name="picard.jar" />
				<include name="swing-layout.jar" />
			</fileset>
			<fileset dir="${dist.dir}">
				<include name="das2server.jar" />
				<include name="common.jar" />
				<include name="genometry.jar" />
				<include name="protannot.jar" />
			</fileset>
		</copy>

		<antcall target="webapp-copy-genopub-files"/>

		<copy file="${web.xml}" tofile="${webapp.dir}/WEB-INF/web.xml" overwrite="true"/>
		<copy file="${context.xml}" tofile="${webapp.dir}/META-INF/context.xml" overwrite="true"/>
	</target>

	<target name="webapp-copy-genopub-files" if="das2genopub">
		<copy todir="${webapp.dir}/WEB-INF/classes">
			<fileset dir="${das2.resources}">
				<include name="hibernate.cfg.xml" />
				<include name="genopub.hbm.xml" />
				<include name="log4j.properties" />
			</fileset>
		</copy>
		
		<mkdir dir="${webapp.dir}/UCSCExecutables" />
		<copy todir="${webapp.dir}/UCSCExecutables">
			<fileset dir="${das2.UCSCExecutables}">
				<include name="bedToBigBed" />
				<include name="readMe.txt" />
				<include name="wigToBigWig" />
			</fileset>
		</copy>
		
		<copy todir="${webapp.dir}/WEB-INF/lib">
			<fileset dir="${lib.dir}">
				<include name="antlr-2.7.6rc1.jar"/>
				<include name="asm.jar" />
				<include name="asm-attrs.jar" />
				<include name="cglib-2.1.3.jar" />
				<include name="commons-collections-2.1.1.jar"/>
				<include name="commons-codec-1.4.jar"/>
				<include name="commons-compress-1.0.jar"/>
				<include name="commons-logging-1.0.4.jar"/>
				<include name="cos.jar"/>
				<include name="dom4j-1.6.1.jar"/>
				<include name="jta.jar" />
				<include name="log4j-1.2.11.jar"/>
				<include name="sam.jar" />
				<include name="picard.jar" />
			</fileset>
    </copy>
	</target>

	<target name="cbc" depends="common-init" description="clear bundle cache">
		<mkdir dir="${bundle.dir}" />
		<subant target="compile" genericantfile="generic.xml" inheritall="true">
			<dirset dir="${basedir}">
				<include name="common" />
				<include name="main" />
			</dirset>
		</subant>
		<java fork="true" classname="com.affymetrix.main.ClearBundleCache" classpath="${main}/build:${common}/build"/>
	</target>

	<target name="check-igb-exe-exists" unless="igb_exe.exists">
		<available property="igb_exe.exists" file="${igb.jar.name}.jar"/>
	</target>

	<target name="clrprf" depends="check-igb-exe-exists" description="clear preferences">
    		<fail unless="igb_exe.exists">Please run ant exe first</fail>
		<java fork="true" jar="${igb.jar.name}.jar" >
			<arg value="-clrprf" />
		</java>
	</target>

	<target name="rebuild" depends="clean,cbc,exe,clrprf" description="creates a new, pristine igb"/>

	<target name="all" depends="exe" description="Runs the 'jar' and 'exe' tasks">
		<iterate target="all" />
	</target>

	<target name="report" depends="test,docs,pmd,cpd,findbugs" description="Generate reports about the project" />

	<target name="pmd" depends="common-init,pmd-init" if="have.pmd" description="run pmd static analysis program">
		<iterate target="pmd" />
	</target>

	<target name="cpd" depends="common-init,cpd-init" if="have.cpd" description="run pmd's cut and paste detection">
		<mkdir dir="${report.dir}/xml" />
		<my.cpd outputFile="${report.dir}/xml/cpd.xml">
			<fileset dir=".">
				<exclude name="*/test/**/*.java" />
				<exclude name="*/demo/**/*.java" />
				<include name="**/*.java" />
			</fileset>
		</my.cpd>
		<xslt in="${report.dir}/xml/cpd.xml" style="${etc.dir}/cpdhtml.xslt" out="${report.dir}/cpd.html" />
	</target>

	<target name="findbugs" depends="compile,common-init,findbugs-init" if="have.findbugs" description="run findbugs static analysis program">
		<iterate target="findbugs" />
	</target>

	<target name="clean" depends="init">
		<delete file="${igb.jar.name}.jar"/>
		<delete file="protannot_exe.jar"/>
		<delete file="${genoviz}/genoviz.jar" />
		<delete file="${demos.dir}/genoviz.jar" />
		<delete file="${etc.dir}/bundles.properties" />
		<delete dir="${dist.dir}" />
		<delete dir="${webstart.dir}" />
		<delete dir="${webapp.dir}" />
		<delete dir="${demos.dir}/genoviz" />
		<delete dir="${report.dir}" />
		<delete dir="${basedir}/build" />
		<delete dir="${work.dir}" />
		<delete dir="${bundle.dir}" />
		<delete dir="${igb.ant.dir}/build" />
		<delete dir="gogo" />
		<iterate target="clean" />
	</target>

	<target name="docs" depends="common-init" description="Create java documentation for all genoviz subprojects">
		<mkdir dir="${docs.dir}"/>
		<my.javadoc sourcepath="${javadoc.src.path}">
			<classpath>
				<fileset dir="${lib.dir}" includes="*.jar" />
				<pathelement path="${junit.jar}" />
			</classpath>
		</my.javadoc>
	</target>

	<target name="igb_ant" description="Compile the ant tasks">
		<mkdir dir="${igb.ant.dir}/build" />
		<my.javac srcdir="${igb.ant.dir}/src" destdir="${igb.ant.dir}/build" classpath="${igb.ant.dir}/lib/ant.jar;${osgi.impl}" />
	</target>

	<target name="declare_igb_ant" depends="igb_ant">
		<taskdef name="bndlprops"
	        classname="com.affymetrix.igb.ant.IncludeJars"
	        classpath="${igb.ant.dir}/build;${osgi.impl}"/>
	</target>

	<target name="bundles_properties" depends="declare_igb_ant" description="Create the bundles.properties file">
		<bndlprops propertiesfile="${etc.dir}/bundles.properties">
			<fileset dir="${bundle.dir}">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${ext.bundle.dir}">
				<include name="*.jar"/>
			</fileset>
		</bndlprops>
	</target>

	<target name="exe" depends="jar,bundles_properties" description="Create a single-jar IGB application">
		<jar jarfile="${bundle.dir}/igb.jar" update="true">
			<fileset file="${def.prefs.dir}/igb_default_prefs.xml" />
			<fileset file="${def.prefs.dir}/igb_default_APIprefs.xml" />
			<fileset file="${def.prefs.dir}/igb_default_menu_prefs.xml" />
			<fileset dir="${igb-18n}/resources" />
		</jar>
		<jar jarfile="${igb.jar.name}.jar" update="false">
			<manifest>
				<attribute name="Main-Class" value="com.affymetrix.main.Main"/>
<!--				<attribute name="SplashScreen-Image" value="com/affymetrix/igb/igb_splash.gif"/>-->
			</manifest>
			<metainf file="LICENSE.html"/>
			<metainf file="NOTICES.txt"/>
			<zipgroupfileset dir="${dist.dir}">
				<include name="main.jar"/>
			</zipgroupfileset>
			<fileset file="${osgi.impl}" />
			<fileset dir="${bundle.dir}">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${ext.bundle.dir}">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${etc.dir}">
				<include name="bundles.properties"/>
			</fileset>
		</jar>
		<jar jarfile="protannot_exe.jar" update="false">
			<manifest>
				<attribute name="Main-Class" value="org.bioviz.protannot.ProtAnnotMain"/>
			</manifest>
			<zipgroupfileset dir="${dist.dir}">
				<include name="common.jar"/>
				<include name="genometry.jar"/>
				<include name="genoviz.jar"/>
				<include name="protannot.jar"/>
			</zipgroupfileset>
			<zipgroupfileset dir="${lib.dir}">
				<include name="freehep-2.1.1.jar"/>
				<include name="jlfgr-1_0.jar"/>
				<include name="colt.jar" />
				<include name="sam.jar" />
			</zipgroupfileset>
		</jar>
	</target>

	<target name="run" depends="classpath" description="run IGB">
		<condition property="apple.jvmargs" value="-Xdock:name=IGB -Xdock:icon=${jnlp.icon.path}" else="" >
			<os family="mac" />
		</condition>
		<java fork="true" maxmemory="${igb.maxmem}" classname="com.affymetrix.main.Main">
			<jvmarg line="${igb.jvmargs}" />
			<jvmarg value="-Xms32m" />
<!--			<jvmarg value="-splash:${jnlp.splashicon.path}" />-->
			<jvmarg line="${apple.jvmargs}" />
			<sysproperty key="java.util.logging.config.file" value="${basedir}/etc/logging.properties" />
			<sysproperty key="apple.laf.useScreenMenuBar" value="true" />
			<classpath refid="igb.classpath"/>
		</java>
	</target>

	<target name="classpath" depends="cbc, compile, copy-bundles, bundles_properties" >
		<path id="igb.classpath">
			<dirset dir="${bundle.dir}/" />
			<dirset dir="${main}/build/" />
			<dirset dir="${common}/build/" />
			<dirset dir="${etc.dir}/" />
			<fileset file="${osgi.impl}" />
		</path>
		<jar jarfile="${bundle.dir}/igb.jar" update="true">
			<fileset file="${def.prefs.dir}/igb_default_prefs.xml" />
			<fileset file="${def.prefs.dir}/igb_default_APIprefs.xml" />
			<fileset file="${def.prefs.dir}/igb_default_menu_prefs.xml" />
			<fileset dir="${igb-18n}/resources" />
		</jar>
	</target>
	
	<target name="run_Protannot" depends="compile" description="run Protannot">
		<condition property="apple.jvmargs" value="-Xdock:name=Protannot " else="" >
			<os family="mac" />
		</condition>
		<java fork="true" classname="org.bioviz.protannot.ProtAnnotMain">
			<jvmarg line="${apple.jvmargs}" />
			<sysproperty key="apple.laf.useScreenMenuBar" value="true" />
			<classpath>
				<fileset dir="${lib.dir}" includes="freehep-2.1.1.jar" />
				<fileset dir="${lib.dir}" includes="jlfgr-1_0.jar"/>
				<fileset dir="${lib.dir}" includes="colt.jar" />
				<fileset dir="${lib.dir}" includes="sam.jar" />
				<dirset dir="${basedir}">
					<include name="common/build" />
					<include name="genometryImpl/build" />
					<include name="genoviz_sdk/build" />
					<include name="protannot/build" />
				</dirset>
			</classpath>
		</java>
	</target>

	<target name="debug-nb-protannot" depends="compile" description="debug protannot" >
        <nbjpdastart addressproperty="jpda.address" name="protannot" transport="dt_socket">
            <classpath>
				<fileset dir="${lib.dir}" includes="freehep-2.1.1.jar" />
				<fileset dir="${lib.dir}" includes="jlfgr-1_0.jar"/>
				<fileset dir="${lib.dir}" includes="colt.jar" />
				<fileset dir="${lib.dir}" includes="sam.jar" />
				<dirset dir="${basedir}">
					<include name="common/build" />
					<include name="genometryImpl/build" />
					<include name="genoviz_sdk/build" />
					<include name="protannot/build" />
				</dirset>
			</classpath>
        </nbjpdastart>
        <java fork="true" classname="org.bioviz.protannot.ProtAnnotMain">
			<classpath>
				<fileset dir="${lib.dir}" includes="freehep-2.1.1.jar" />
				<fileset dir="${lib.dir}" includes="colt.jar" />
				<fileset dir="${lib.dir}" includes="sam.jar" />
				<dirset dir="${basedir}">
					<include name="common/build" />
					<include name="genometryImpl/build" />
					<include name="genoviz_sdk/build" />
					<include name="protannot/build" />
				</dirset>
			</classpath>
			<jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,address=${jpda.address}"/>
		</java>
    </target>

	<target name="release" depends="release-igb, release-das2server, release-igb-webstart, release-genoviz-sdk" description="Package IGB for Release" />

	<target name="release-igb" depends="exe">
		<mkdir dir="${release.dir}/igb" />

		<copy todir="${release.dir}/igb">
			<fileset dir="${basedir}">
				<include name="NOTICES.txt" />
				<include name="RELEASES.txt" />
				<include name="LICENSE.html" />
				<include name="run_igb.*" />
				<include name="${igb.jar.name}.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="*.txt" />
				<exclude name="README.txt" />
			</fileset>
		</copy>

		<zip destfile="${release.dir}/igb.zip" basedir="${release.dir}">
			<include name="igb/**" />
		</zip>
	</target>

	<target name="release-das2server" depends="common-init">
		<mkdir dir="${release.dir}/${das2_release}" />

		<antcall target="webapp">
			<param name="webapp.dir" value="${release.dir}/${das2_release}/${das2_webapp}" />
		</antcall>

		<copy todir="${release.dir}/${das2_release}">
			<fileset dir="${basedir}">
				<include name="NOTICES.txt" />
				<include name="RELEASES.txt" />
				<include name="LICENSE.html" />
			</fileset>
			<fileset file="${lib.dir}/APACHE_LICENSE_2.txt" />
		</copy>

		<copy  file="${das2server}/${das2_install_notes}" tofile="${release.dir}/${das2_release}/INSTALL.txt" overwrite="true"/>

	  <antcall target="release-copy-genopub-sql"/>

		<zip destfile="${release.dir}/${das2_release}.zip" basedir="${release.dir}">
			<include name="${das2_release}/**" />
		</zip>
	</target>

	<target name="release-copy-genopub-sql" if="das2genopub">
		<copy todir="${release.dir}/${das2_release}/sql">
			<fileset file="${das2server}/sql/*.sql" />
		</copy>
	</target>


	<target name="deploy-das2server" depends="release-das2server" description="Copy das2 web application to apache tomcat">
		<copy todir="${server.deploy.dir}/${das2_webapp}" overwrite="true">
			<fileset dir="${release.dir}/${das2_release}/${das2_webapp}">
				<include name="**/*" />
			</fileset>
		</copy>
	</target>

	<target name="release-igb-webstart" depends="common-init">
		<mkdir dir="${release.dir}/igb-webstart" />

		<antcall target="webstart">
			<param name="webstart.dir" value="${release.dir}/igb-webstart" />
		</antcall>

		<copy todir="${release.dir}/igb-webstart">
			<fileset dir="${basedir}">
				<include name="NOTICES.txt" />
				<include name="RELEASES.txt" />
				<include name="LICENSE.html" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="*.txt" />
				<exclude name="README.txt" />
			</fileset>
		</copy>

		<zip destfile="${release.dir}/igb-webstart.zip" basedir="${release.dir}">
			<include name="igb-webstart/**" />
		</zip>
	</target>

	<target  name="release-genoviz-sdk" depends="jar, demos">
		<mkdir dir="${release.dir}/genoviz-sdk" />
		<copy todir="${release.dir}/genoviz-sdk/genoviz-sdk/">
			<fileset file="${dist.dir}/genoviz.jar" />
			<fileset dir="${basedir}">
				<include name="NOTICES.txt" />
				<include name="RELEASES.txt" />
				<include name="LICENSE.html" />
			</fileset>
			<fileset dir="${genoviz}">
				<include name="index.html" />
				<include name="tutorial/**" />
				<include name="demo/**" />
			</fileset>
		</copy>
		<zip destfile="${release.dir}/genoviz-sdk.zip" basedir="${release.dir}" >
			<include name="genoviz-sdk/**" />
		</zip>
	</target>

	<target name="profile-nb" if="netbeans.home">
		<ant target="profile-nb" antfile="nbproject/ide-targets.xml" />
	</target>

	<target name="profile-single-nb" if="netbeans.home">
		<ant target="profile-single-nb" antfile="nbproject/ide-targets.xml" />
	</target>

	<target name="gogo" depends="jar" description="run IGB using felix gogo">
		<mkdir dir="gogo" />
		<mkdir dir="gogo/bin" />
		<copy file="${lib.dir}/felix.jar" tofile="gogo/bin/felix.jar" />
		<mkdir dir="gogo/bundle" />
		<copy todir="gogo/bundle" overwrite="true">
			<fileset dir="${lib.dir}">
				<include name="org.apache.felix.gogo.*.jar" />
			</fileset>
		</copy>
		<copy todir="gogo/bundle" overwrite="true">
			<fileset dir="${bundle.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<mkdir dir="gogo/conf" />
		<copy file="${main}/resources/config.properties" tofile="gogo/conf/config.properties" />
		<java jar="gogo/bin/felix.jar" fork="true" dir="gogo" />
	</target>

	<target name="debug" depends="common-init" description="compile debug project">
		<subant target="compile" genericantfile="generic.xml" inheritall="true">
			<dirset dir="${basedir}">
				<include name="debug" />
			</dirset>
		</subant>
	</target>

	<!--                                                                 -->
	<!-- Macro to pass targets to each sub project.  All sub projects    -->
	<!-- are build using generic.xml.                                    -->
	<!--                                                                 -->
	<macrodef name="iterate">
		<attribute name="target" default=""/>
		<sequential>
			<condition property="findbugs">
				<equals arg1="@{target}" arg2="findbugs" />
			</condition>
			<subant target="@{target}" genericantfile="generic.xml" inheritall="true">
				<!-- multiple dirsets ensure dependency ordering -->
				<dirset dir="${basedir}">
					<include name="common" />
					<include name="genoviz_sdk" />
					<include name="genometryImpl" />
				</dirset>
				<dirset dir="${basedir}/plugins">
					<include name="igb_service" />
					<include name="window_service" />
				</dirset>
				<dirset dir="${basedir}">
					<include name="igb" />
				</dirset>
				<dirset dir="${basedir}/plugins">
					<include name="window_service_def" />
				</dirset>
				<dirset dir="${basedir}/plugins">
					<patternset includes="${include.bundles}"/>
				</dirset>
				<dirset dir="${basedir}">
					<include name="protannot" />
					<include name="das2_server" />
				</dirset>
				<dirset dir="${basedir}">
					<include name="main" />
					<include name="igb-i18n" unless="findbugs" />
				</dirset>
			</subant>
		</sequential>
	</macrodef>

</project>
