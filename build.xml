<!--                                                                 -->
<!-- Test file for new, improved build system.  There are still a    -->
<!-- number of problems to be worked out.  This files does not yet   -->
<!-- have test, demo, or run targets. The test and demo targets may  -->
<!-- have to be one off, or the targets need to be added to all sub- -->
<!-- projects via the common.xml.  The common.xml should also be     -->
<!-- be able to be used on a sub-project alone.                      -->
<!--                                                                 -->
<project name="IGB" basedir=".">
	<property name="props" value="${basedir}/build.properties" />
	<property file="${props}" />
	<import file="common.xml" />

	<target name="init">
		<property name="name" value="Integrated Genome Browser" />

		<!-- Locations of subprojects -->
		<property name="main"                value="${basedir}/core/main" />
		<property name="common"              value="${basedir}/core/common" />
		<property name="genometry"           value="${basedir}/core/genometryImpl" />
		<property name="igb"                 value="${basedir}/core/igb" />
		<property name="igb-18n"             value="${basedir}/core/igb-i18n" />
		<property name="igb_service"         value="${basedir}/core/igb_service" />
		<property name="window_service"      value="${basedir}/core/window_service" />
		<property name="HeatmapEditor"		 value="${basedir}/core/HeatmapEditor" />
		<property name="window_service_def"  value="${basedir}/plugins/window_service_def" />

		<!-- Locations of optional bundle subprojects -->
		<property name="BigBedHandler"       value="${basedir}/plugins/BigBedHandler" />
		<property name="BigWigHandler"       value="${basedir}/plugins/BigWigHandler" />
		<property name="Bookmark"            value="${basedir}/plugins/Bookmark" />
		<property name="ExternalView"        value="${basedir}/plugins/ExternalView" />
		<property name="AnnotationTab"       value="${basedir}/plugins/AnnotationTab" />
		<property name="GraphTab"		     value="${basedir}/plugins/GraphTab" />
		<property name="PropertyView"        value="${basedir}/plugins/PropertyView" />
		<property name="RestrictionSites"    value="${basedir}/plugins/RestrictionSites" />
		<property name="SearchModeIdOrProps" value="${basedir}/plugins/SearchModeIdOrProps" />
		<property name="KeyWordSearch"		 value="${basedir}/plugins/KeyWordSearch" />
		<property name="SearchModeSymmetryFilter"   value="${basedir}/plugins/SearchModeSymmetryFilter" />
		<property name="SearchView"          value="${basedir}/plugins/SearchView" />
		<property name="Thresholding"        value="${basedir}/plugins/Thresholding" />
		<property name="Tutorial"            value="${basedir}/plugins/Tutorial" />
		<property name="IGBScript"           value="${basedir}/plugins/IGBScript" />
		<property name="BAMIndexer"			 value="${basedir}/plugins/BAMIndexer"/>
		<property name="NCBIBlast"			 value="${basedir}/plugins/NCBIBlast" />
		<property name="plugins_page"        value="${basedir}/plugins/plugins_page" />
		<property name="ApolloLibrary"		 value="${basedir}/plugins/ApolloLibrary" />

		<!-- directory paths -->
		<property name="dist.dir"			 value="${basedir}/dist" />
		<property name="webstart.dir"		 value="${dist.dir}/webstart" />
		<property name="release.dir"		 value="${dist.dir}/release" />
		<property name="lib.dir"			 value="${basedir}/ext" />
		<property name="etc.dir"			 value="${basedir}/etc" />
		<property name="docs.dir"			 value="${basedir}/doc/api" />
		<property name="report.dir"			 value="${basedir}/reports" />
		<property name="bundle.dir"			 value="${basedir}/bundles" />
		<property name="igb.ant.dir"		 value="${basedir}/plugins/ant" />
		<property name="def.prefs.dir"       value="${basedir}/core/igb/resources" />
		
		<!-- list the libraries to create bundle -->
		<property name="include.lib" value="affx_fusion,be.pwnt.jflow_1.0.0,freehep-2.1.1,jdom-1.1.3,colt,commons-net-2.0,image4j,jide,jlfgr-1_0,log4j-1.2.11,picard,swing-layout,lambdaj-2.4-with-dependencies,JGoogleAnalytics_0.4,commons-io-2.4,commons-csv-1.0,guava-16.0.1,genoviz-1.0,igbSwingExt-1.0,sam,tribble"/>
	
		<!-- list the libraries to copy -->
		<property name="copy.lib" value="BigWig,commons-codec-1.4,commons-lang3-3.1,commons-pool-1.6,commons-compress-1.6"/>
		
		<property name="osgi.impl"   value="${osgi.impl.dir}${osgi.impl.file}"/>
		<property name="javadoc.src.path"   value="${common}/src:${genometry}/src:${genometry}/test:${igb}/src:${igb}/test:${igb_service}/src:${window_service}/src" />
		<property file="${common}/resources/common.properties"/>
	</target>

	<target name="compile" depends="common-init" description="Compile all genoviz subprojects">
		<iterate target="compile" />
	</target>

	<target name="compile-tests" depends="common-init">
		<iterate target="compile-tests" />
	</target>

	<target name="check-nullness" depends="common-init" description="Check all genoviz subprojects for null references not satisfied by contract">
		<iterate target="check-nullness" />
	</target>

	<target name="test" depends="common-init" description="Run unit tests for all genoviz subprojects">
		<iterate target="test" />
	</target>

	<target name="copy-bundle-if" description="copy a bundle to bundle dir" unless="${jar_name}.present">
		<java jar="${lib.dir}/biz.aQute.bnd.jar" fork="true" dir="${lib.dir}" >
			<arg value="wrap"/>
			<arg value="${jar_name}.jar"/>
		</java>
		<move file="${lib.dir}/${jar_name}.bar" tofile="${bundle.dir}/${jar_name}.bnd.jar" filtering="false" />
	</target>

	<target name="copy-bundle" description="copy bundles to bundle dir">
		<available file="${bundle.dir}/${jar_name}.bnd.jar" property="${jar_name}.present"/>
		<antcall target="copy-bundle-if">
    			<param name="jar_name" value="${jar_name}"/>
		</antcall>
	</target>

	<target name="ant-copy-bundle" description="ant call to create bundle">
		<antcall target="copy-bundle">
			<param name="jar_name" value="${name_jar}"/>
		</antcall>
	</target>
		
	<target name="bundle-copy" description="copy lib to bundles dir">
		<copy file="${lib.dir}/${jar_name}.jar" tofile="${bundle.dir}/${jar_name}.jar" filtering="false" />
	</target>
	
	<target name="copy-bundles" description="copy bundles to bundle dir" depends="init,extras-init,compiler-def-args">
		<taskdef name="foreach" classname="net.sf.antcontrib.logic.ForEach" classpathref="contrib.path" />
		
		<mkdir dir="${bundle.dir}" />
		
		<foreach target="ant-copy-bundle" parallel="true" inheritall="true" param="name_jar" list="${include.lib}"/>
		<foreach target="bundle-copy" parallel="true" inheritall="true" param="jar_name" list="${copy.lib}"/>
	</target>

	<target name="customize_xml">
		<copy todir="${basedir}/core/igb/build" filtering="true">
			<fileset dir="${def.prefs.dir}" includes="**/*.xml"/>
		</copy>
	</target>

	<target name="jar" depends="common-init,customize_xml" description="Create jar files for all genoviz subprojects">
		<parallel>
			<iterate target="jar" />
			<antcall target="copy-bundles" inheritAll="true" inheritRefs="true" />
		</parallel>
	</target>

	<target name="sign">
		<jar destfile="${theFile}" update="true" index="true">
            <manifest>
                <attribute name="Trusted-Library" value="true" />
            </manifest>
        </jar>
		<my.signjar jar="${theFile}" signedjar="${theFile}" />
	</target>

	<macrodef name="webstart.jar" >
		<attribute name="jnlp.file"/>
		<attribute name="jar.file" />
		<attribute name="temp.file" />
		<sequential>
			<copy file="${jnlp.dir}/@{jnlp.file}" tofile="${webstart.dir}/@{jnlp.file}" filtering="true" overwrite="true" />
			<copy file="${webstart.dir}/@{jnlp.file}" tofile="${dist.dir}/JNLP-INF/APPLICATION_TEMPLATE.JNLP" overwrite="true"/>
			<jar jarfile="${webstart.dir}/@{jar.file}" update="false" index="true" filesetmanifest="merge">
				<fileset dir="${dist.dir}" includes="JNLP-INF/*"/>
				<zipgroupfileset file="@{temp.file}" />
			</jar>
			<my.signjar jar="${webstart.dir}/@{jar.file}" signedjar="${webstart.dir}/@{jar.file}" />
		</sequential>
	</macrodef>

	<target name="webstart" depends="jar, bundles_properties" description="Create webstart-compatible IGB jars">
		<mkdir dir="${webstart.dir}" />

		<copy file="${def.prefs.dir}/igb_default_prefs.xml" tofile="${webstart.dir}/igb_prefs.xml" />
		<copy file="${jnlp.icon.path}" tofile="${webstart.dir}/${jnlp.icon.name}" />
<!--		<copy file="${jnlp.splashicon.path}" tofile="${webstart.dir}/${jnlp.splashicon.name}" />-->

		<taskdef name="foreach" classname="net.sf.antcontrib.logic.ForEach" classpathref="contrib.path" />
		<foreach target="sign" parallel="true" inheritall="true" param="theFile">
			<fileset dir="${bundle.dir}">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="${ext.bundle.dir}">
				<include name="*.jar"/>
			</fileset>
		</foreach>

		<mkdir dir="${dist.dir}/JNLP-INF" />
		<property name="temp.jar" value="${webstart.dir}/${igb.jar.name}.tmp.jar" />
		<igb.executable jarfile="${temp.jar}" index="false" />

		<webstart.jar temp.file="${temp.jar}" jar.file="${igb.jar.name}.jar" jnlp.file="igb.jnlp" />
		<webstart.jar temp.file="${temp.jar}" jar.file="${igb.jar.large.name}.jar" jnlp.file="igb-large.jnlp" />
		<webstart.jar temp.file="${temp.jar}" jar.file="${igb.jar.5GB.name}.jar" jnlp.file="igb-5GB.jnlp" />
		<delete dir="${dist.dir}/JNLP-INF" />
		<delete file="${temp.jar}" />
				
		<!--my.signjar jar="${dist.dir}/igb-i18n.jar" signedjar="${webstart.dir}/igb-i18n.jar" / -->
	</target>

	<presetdef name="igb.launcher">		
		<jar update="false">
			<manifest>
				<attribute name="Main-Class" value="com.affymetrix.main.Main"/>
				<attribute name="Application-Name" value="IGB" />
				<!--Attributes below are useless for local instance. 
					But they are need for webstart.	-->
				<attribute name="Permissions" value="all-permissions"/>
				<attribute name="Trusted-Library" value="true"/>
				<attribute name="Codebase" value="*"/>
				<attribute name="Caller-Allowable-Codebase" value="*"/>
				<attribute name="Application-Library-Allowable-Codebase" value="*" />
<!--				<attribute name="SplashScreen-Image" value="com/affymetrix/igb/igb_splash.gif"/>-->
			</manifest>
			<metainf file="LICENSE.html"/>
			<metainf file="NOTICES.txt"/>
			<fileset dir="${main}/build" />
			<fileset dir="${common}/build" />
			<fileset file="${bundle.dir}/bundles.properties"/>
			<zipgroupfileset file="${osgi.impl}" />
		</jar>
	</presetdef>

	<target name="create.bundles.list" depends="common-init" >
		<mkdir dir="${webstart.dir}/bundles"/>
		<taskdef name="for" classname="net.sf.antcontrib.logic.ForTask" classpathref="contrib.path" />
		<taskdef name="var" classname="net.sf.antcontrib.property.Variable" classpathref="contrib.path" />
		<var name="felix.auto.start" value="" />
		<for param="file">
			<path>
				<fileset dir="${bundle.dir}" includes="**/*.jar"/>	
				<fileset dir="${ext.bundle.dir}" includes="*.jar"/>
			</path>
			<sequential>
				<var name="basename" unset="true"/> 
				<basename property="basename" file="@{file}" />
				<var name="felix.auto.start" value="${felix.auto.start} ${jnlp.codebase}/bundles/${basename}"/>
				<copy file="@{file}" tofile="${webstart.dir}/bundles/${basename}" />
			</sequential>
		</for>
		<filter token="felix.auto.start"  value="${felix.auto.start}" />
		<copy file="${main}/resources/config.properties" tofile="${main}/build/config.properties" overwrite="true" filtering="true" />
	</target>

	<target name="cbc" depends="compiler-def-args,init" description="clear bundle cache">
		<mkdir dir="${bundle.dir}" />
		<subant target="compile" genericantfile="generic.xml" inheritall="true">
			<dirset dir="${basedir}">
				<include name="core/common" />
				<include name="core/main" />
			</dirset>
		</subant>
		<java fork="true" classname="com.affymetrix.main.ClearBundleCache" classpath="${main}/build:${common}/build"/>
	</target>

	<target name="check-igb-exe-exists" unless="igb_exe.exists">
		<available property="igb_exe.exists" file="${igb.jar.name}.jar"/>
	</target>

	<target name="clrprf" depends="check-igb-exe-exists" description="clear preferences">
    		<fail unless="igb_exe.exists">Please run ant exe first</fail>
		<java fork="true" jar="${igb.jar.name}.jar" >
			<arg value="-clrprf" />
			<arg value="-exit" />
		</java>
	</target>

	<target name="rebuild" depends="clean,cbc,exe,clrprf" description="creates a new, pristine igb"/>

	<target name="all" depends="exe" description="Runs the 'jar' and 'exe' tasks">
		<iterate target="all" />
	</target>

	<target name="report" depends="test,docs" description="Generate reports about the project" />

	<target name="clean" depends="init">
		<delete includeEmptyDirs="true" quiet="true">
			<fileset dir="${dist.dir}" />
			<fileset dir="${webstart.dir}" />
			<fileset dir="${report.dir}" />
			<fileset dir="${basedir}/build" />
			<fileset dir="${work.dir}" />
			<fileset dir="${bundle.dir}" />
			<fileset dir="${igb.ant.dir}/build" />
			<fileset file="${igb.jar.name}.jar" />
			<fileset file="${igb.jar.large.name}.jar" />
			<fileset file="${igb.jar.5GB.name}.jar" />
		</delete>
		<iterate target="clean" />
		<iterate-non-plugins target="clean" />
	</target>

	<target name="docs" depends="common-init" description="Create java documentation for all genoviz subprojects">
		<mkdir dir="${docs.dir}"/>
		<my.javadoc sourcepath="${javadoc.src.path}">
			<classpath>
				<fileset dir="${lib.dir}" includes="*.jar" />
				<pathelement path="${junit.jar}" />
			</classpath>
		</my.javadoc>
	</target>

	<target name="igb_ant" description="Compile the ant tasks">
		<mkdir dir="${igb.ant.dir}/build" />
		<my.javac srcdir="${igb.ant.dir}/src" destdir="${igb.ant.dir}/build" classpath="${igb.ant.dir}/lib/ant.jar;${osgi.impl}" />
	</target>

	<target name="declare_igb_ant" depends="igb_ant">
		<taskdef name="bndlprops"
	        classname="com.affymetrix.igb.ant.IncludeJars"
	        classpath="${igb.ant.dir}/build;${osgi.impl}"/>
	</target>

	<target name="bundles_properties" depends="declare_igb_ant" description="Create the bundles.properties file">
		<bndlprops propertiesfile="${bundle.dir}/bundles.properties">
			<fileset dir="${bundle.dir}">
				<include name="*.jar"/>
			</fileset>
			<fileset dir="${ext.bundle.dir}">
				<include name="*.jar"/>
			</fileset>
		</bndlprops>
	</target>

	<target name="exe" depends="jar,bundles_properties" description="Create a single-jar IGB application">
		<igb.executable jarfile="${igb.jar.name}.jar" index="true"/>
	</target>
	
	<presetdef name="igb.executable">
		<jar update="false">
			<manifest>
				<attribute name="Main-Class" value="com.affymetrix.main.Main"/>
				<attribute name="Application-Name" value="IGB" />
				<!--Attributes below are useless for local instance. 
					But they are need for webstart.	-->
				<attribute name="Permissions" value="all-permissions"/>
				<attribute name="Trusted-Library" value="true"/>
				<attribute name="Codebase" value="*"/>
				<attribute name="Caller-Allowable-Codebase" value="*"/>
				<attribute name="Application-Library-Allowable-Codebase" value="*" />
<!--				<attribute name="SplashScreen-Image" value="com/affymetrix/igb/igb_splash.gif"/>-->
			</manifest>
			<metainf file="LICENSE.html"/>
			<metainf file="NOTICES.txt"/>
			<zipgroupfileset dir="${dist.dir}">
				<include name="main.jar"/>
				<include name="common.jar"/>
			</zipgroupfileset>
			<zipgroupfileset file="${osgi.impl}" />
			<fileset dir="${bundle.dir}">
				<include name="*.jar"/>
				<include name="bundles.properties"/>
			</fileset>
			<fileset dir="${ext.bundle.dir}">
				<include name="*.jar"/>
			</fileset>
		</jar>
	</presetdef>
	
	<target name="cache_exe" depends="common-init" description="Create a single-jar Protannot application">
		<sequential>
			<subant target="jar" genericantfile="generic.xml" inheritall="true">
				<!-- multiple dirsets ensure dependency ordering -->
				<dirset dir="${basedir}/core">
					<include name="common" />
					<include name="genometryImpl" />
				</dirset>
			</subant>
		</sequential>
		<jar jarfile="cache_exe.jar" update="false">
			<manifest>
				<attribute name="Main-Class" value="com.affymetrix.genometryImpl.util.CacheScript"/>
			</manifest>
			<zipgroupfileset dir="${dist.dir}">
				<include name="common.jar"/>
				<include name="genometry.jar"/>
			</zipgroupfileset>
			<zipgroupfileset dir="${lib.dir}">
				<include name="freehep-2.1.1.jar"/>
				<include name="jlfgr-1_0.jar"/>
				<include name="tango-icon-theme-0.8.90.jar"/>
				<include name="colt.jar" />
				<include name="sam.jar" />
				<include name="felix.jar" />
			</zipgroupfileset>
		</jar>
	</target>

	<target name="run" depends="compile,classpath" description="run IGB">
		<condition property="apple.jvmargs" value="-Xdock:name=IGB -Xdock:icon=${jnlp.icon.path}" else="" >
			<os family="mac" />
		</condition>
		<java fork="true" maxmemory="${igb.maxmem}" classname="com.affymetrix.main.Main">
			<jvmarg value="-enableassertions" />
			<jvmarg line="${igb.jvmargs}" />
			<jvmarg value="-Xms32m" />
			<!--<jvmarg value="-Dsun.java2d.opengl=true"/> -->
			 <!-- <jvmarg value="-Dsun.java2d.trace=log"/>-->
<!--			<jvmarg value="-splash:${jnlp.splashicon.path}" />-->
			<jvmarg line="${apple.jvmargs}" />
			<sysproperty key="java.util.logging.config.file" value="${basedir}/etc/logging.properties" />
			<sysproperty key="apple.laf.useScreenMenuBar" value="true" />
			<classpath refid="igb.classpath"/>
		</java>
	</target>

	<target name="comp-copy" description="compile and copy bundles">
		<parallel>
			<antcall target="compile" inheritAll="true" inheritRefs="true" />
			<antcall target="copy-bundles" inheritAll="true" inheritRefs="true" />
		</parallel>
	</target>
	
	<target name="classpath" depends="common-init, cbc, comp-copy, bundles_properties" >
		<path id="igb.classpath">
			<dirset dir="${bundle.dir}/" />
			<dirset dir="${main}/build/" />
			<dirset dir="${common}/build/" />
			<dirset dir="${etc.dir}/" />
			<fileset file="${osgi.impl}" />
		</path>
	</target>
	
	<target name="run_Protannot" depends="compile" description="run Protannot">
		<condition property="apple.jvmargs" value="-Xdock:name=Protannot " else="" >
			<os family="mac" />
		</condition>
		<java fork="true" classname="org.bioviz.protannot.ProtAnnotMain">
			<jvmarg line="${apple.jvmargs}" />
			<sysproperty key="apple.laf.useScreenMenuBar" value="true" />
			<classpath>
				<fileset dir="${lib.dir}" includes="freehep-2.1.1.jar" />
				<fileset dir="${lib.dir}" includes="jlfgr-1_0.jar"/>
				<fileset dir="${lib.dir}" includes="colt.jar" />
				<fileset dir="${lib.dir}" includes="sam.jar" />
				<dirset dir="${basedir}">
					<include name="common/build" />
					<include name="genometryImpl/build" />
				</dirset>
			</classpath>
		</java>
	</target>

	<target name="release" depends="release-igb, release-igb-webstart" description="Package IGB for Release" />

	<target name="release-igb" depends="exe">
		<mkdir dir="${release.dir}/igb" />

		<copy todir="${release.dir}/igb">
			<fileset dir="${basedir}">
				<include name="NOTICES.txt" />
				<include name="RELEASES.txt" />
				<include name="LICENSE.html" />
				<include name="run_igb*" />
				<include name="${igb.jar.name}.jar" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="*.txt" />
				<exclude name="README.txt" />
			</fileset>
		</copy>
		
		<chmod perm="550" verbose="true">
			<fileset dir="${release.dir}/igb">
				<include name="run_igb*" />
			</fileset>
		</chmod>

		<zip destfile="${release.dir}/igb.zip" basedir="${release.dir}">
			<include name="igb/**" />
		</zip>

		<!--Since Ant does not preserve executable permission on Unix while
			creating archive, use unix zip command to create a zip. 
			https://ant.apache.org/manual/platform.html -->
		<exec executable="zip" osfamily="unix" failifexecutionfails="false" dir="${release.dir}">
			<arg value="-r"/> 
			<arg value="igb.zip"/>
			<arg value="igb"/>
		</exec>
	</target>

	<target name="release-igb-webstart" depends="common-init">
		<mkdir dir="${release.dir}/igb-webstart" />

		<antcall target="webstart">
			<param name="webstart.dir" value="${release.dir}/igb-webstart" />
		</antcall>

		<copy todir="${release.dir}/igb-webstart">
			<fileset dir="${basedir}">
				<include name="NOTICES.txt" />
				<include name="RELEASES.txt" />
				<include name="LICENSE.html" />
			</fileset>
			<fileset dir="${lib.dir}">
				<include name="*.txt" />
				<exclude name="README.txt" />
			</fileset>
		</copy>

		<zip destfile="${release.dir}/igb-webstart.zip" basedir="${release.dir}">
			<include name="igb-webstart/**" />
		</zip>
	</target>

	<target name="profile-nb" if="netbeans.home">
		<ant target="profile-nb" antfile="nbproject/ide-targets.xml" />
	</target>

	<target name="profile-single-nb" if="netbeans.home">
		<ant target="profile-single-nb" antfile="nbproject/ide-targets.xml" />
	</target>

	<target name="debug" depends="common-init" description="compile debug project">
		<subant target="compile" genericantfile="generic.xml" inheritall="true">
			<dirset dir="${basedir}">
				<include name="debug" />
			</dirset>
		</subant>
	</target>
	
	<!--                                                                 -->
	<!-- Macro to pass targets to each sub project.  All sub projects    -->
	<!-- are build using generic.xml.                                    -->
	<!--                                                                 -->
	<macrodef name="iterate">
		<attribute name="target" default=""/>
		<sequential>
			<iterate-core target="@{target}" />
			<iterate-plugins target="@{target}" />
		</sequential>
	</macrodef>

	<macrodef name="iterate-core">
		<attribute name="target" default=""/>
		<sequential>
			<subant target="@{target}" genericantfile="generic.xml" inheritall="true">
				<!-- multiple dirsets ensure dependency ordering -->
				<dirset dir="${basedir}/core">
					<include name="common" />
					<include name="genometryImpl" />
				</dirset>
				<dirset dir="${basedir}/core">
					<include name="igb_service" />
					<include name="window_service" />
				</dirset>
				<dirset dir="${basedir}/core">
					<include name="HeatmapEditor" />
				</dirset>
				<dirset dir="${basedir}/core">
					<include name="igb" />
				</dirset>
				<dirset dir="${basedir}/plugins">
					<include name="ApolloLibrary" />
				</dirset>
			</subant>
		</sequential>
	</macrodef>

	<macrodef name="iterate-plugins">
		<attribute name="target" default=""/>
		<sequential>
			<subant target="@{target}" genericantfile="generic.xml" inheritall="true">
				<!-- multiple dirsets ensure dependency ordering -->
				<dirset dir="${basedir}/plugins">
					<include name="window_service_def" />
				</dirset>
				<filelist dir="${basedir}/plugins" files="${include.bundles}"/> 
				<dirset dir="${basedir}/core">
					<include name="main" />
				</dirset>
			</subant>
		</sequential>
	</macrodef>

	<macrodef name="iterate-non-plugins">
		<attribute name="target" default=""/>
		<sequential>
			<subant target="@{target}" genericantfile="plugins/ext-build-plugin.xml" inheritall="true">
				<dirset dir="${basedir}/plugins">
					<patternset includes="${not.include.bundles}"/>
				</dirset>
			</subant>
		</sequential>
 	</macrodef>

	<target name="externalBundles" depends="common-init">
		<sequential>
			<iterate-core target="compile" />
			<antcall target="-extBundles" />
		</sequential>
	</target>

	<target name="-extBundles">
		<mkdir dir="${release.dir}/dev-plugins" />
		<sequential>
			<property name="igb.ext.bundle.dir" value="${release.dir}/dev-plugins" />
			<!-- Now compile external bundles -->
			<iterate-non-plugins target="compile" />

			<java fork="true" classname="org.osgi.impl.bundle.bindex.Index">
				<arg line="-n IGB" />
				<arg line="-q" />
				<arg line="-r ${igb.ext.bundle.dir}/repository.xml" />
				<arg line="${igb.ext.bundle.dir}" />
				<classpath>
					<pathelement location="${lib.dir}/bindex.jar"/>
				</classpath>
			</java>
		</sequential>
	</target>

   <!--
   This target produces javadoc with UML graphs on the top of each documenation page
   The visualization helps track the relationship among classes and interfaces.
   More about the tool can be found at:   http://www.umlgraph.org/index.html
  
	This tool uses dot.  to install on Ubuntu do:
	sudo apt-get install graphviz
	More info for other platforms at:  http://www.graphviz.org/
	-->
	<target name="umljavadocs" depends="jar" description="Build HTML including UML diagrams from JavaDoc. Requires graphviz for the UML diagrams.">
		<path id="uml.source.path">
			<pathelement path="${basedir}/igb/src/"/>
			<pathelement path="${basedir}/genometryImpl/src/"/>
			<pathelement path="${basedir}/main/src/"/>
			<pathelement path="${basedir}/common/src/"/>
		</path>
		<javadoc sourcepathref="uml.source.path" packagenames="*" destdir="doc" 
				 private="true">
			<doclet name="org.umlgraph.doclet.UmlGraphDoc" path="${basedir}/ext/UmlGraph-5.4.jar">
				<param name="-inferrel"/>
				<param name="-inferdep"/>
				<param name="-hide" value="java.*"/>
				<param name="-collpackages" value="java.util.*"/>
				<param name="-qualify"/>
				<param name="-postfixpackage"/>
				<param name="-nodefontsize" value="9"/>
				<param name="-nodefontpackagesize" value="7"/>
				<param name="-link" value="http://java.sun.com/j2se/1.5.0/docs/guide/javadoc/doclet/spec"/>
				<param name="-link" value="http://java.sun.com/j2se/1.5/docs/api"/>
			</doclet>
		</javadoc>
	</target>

</project>
