package com.affymetrix.igb.trackOperations;

import com.affymetrix.igb.osgi.service.IGBService;
import com.affymetrix.igb.osgi.service.IGBTabPanel;
import java.util.ResourceBundle;

public class SimpleTrackTabGUI extends IGBTabPanel {

	private static final long serialVersionUID = 1L;
	public static final ResourceBundle BUNDLE = ResourceBundle.getBundle("trackOperations");
	private static final int TAB_POSITION = 4;
	public TrackOperationsTab trackOpTab;
	private static SimpleTrackTabGUI singleton;

	public SimpleTrackTabGUI(IGBService _igbService) {
		super(_igbService, BUNDLE.getString("trackOperationsTab"), BUNDLE.getString("trackOperationsTab"), false, TAB_POSITION);

		TrackOperationsTab.init(igbService);
		trackOpTab = TrackOperationsTab.getSingleton();
		initComponents();
	}

	public static void init(IGBService igbService) {
		singleton = new SimpleTrackTabGUI(igbService);
	}

	public static synchronized SimpleTrackTabGUI getSingleton() {
		return singleton;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manipulationsPanel = new javax.swing.JPanel();
        transformLabel = new javax.swing.JLabel();
        transformationCB = trackOpTab.transformationCB;
        operationLabel = new javax.swing.JLabel();
        operationCB = trackOpTab.operationCB;
        transformationGoB = trackOpTab.transformationGoB;
        operationGoB = trackOpTab.operationGoB;
        combineB = trackOpTab.combineB;
        splitB = trackOpTab.splitB;
        baseTextBox = trackOpTab.paramT;
        baseLabel = new javax.swing.JLabel();

        manipulationsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Manipulations"));

        transformLabel.setText("Transform");

        operationLabel.setText("Operation");

        transformationGoB.setText("Go");

        operationGoB.setText("Go");

        combineB.setText("Join");

        splitB.setText("Split");

        baseLabel.setText("Base:");

        org.jdesktop.layout.GroupLayout manipulationsPanelLayout = new org.jdesktop.layout.GroupLayout(manipulationsPanel);
        manipulationsPanel.setLayout(manipulationsPanelLayout);
        manipulationsPanelLayout.setHorizontalGroup(
            manipulationsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(manipulationsPanelLayout.createSequentialGroup()
                .add(manipulationsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(transformLabel)
                    .add(manipulationsPanelLayout.createSequentialGroup()
                        .add(manipulationsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(operationCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 129, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(transformationCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(5, 5, 5)
                        .add(manipulationsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(transformationGoB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(operationGoB, 0, 0, Short.MAX_VALUE)))
                    .add(operationLabel)
                    .add(manipulationsPanelLayout.createSequentialGroup()
                        .add(combineB)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(splitB))
                    .add(manipulationsPanelLayout.createSequentialGroup()
                        .add(8, 8, 8)
                        .add(baseLabel)
                        .add(5, 5, 5)
                        .add(baseTextBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(1, 1, 1))
        );

        manipulationsPanelLayout.linkSize(new java.awt.Component[] {operationCB, transformationCB}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        manipulationsPanelLayout.linkSize(new java.awt.Component[] {operationGoB, transformationGoB}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        manipulationsPanelLayout.setVerticalGroup(
            manipulationsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(manipulationsPanelLayout.createSequentialGroup()
                .add(transformLabel)
                .add(1, 1, 1)
                .add(manipulationsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(transformationCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(transformationGoB))
                .add(2, 2, 2)
                .add(manipulationsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(baseLabel)
                    .add(baseTextBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(2, 2, 2)
                .add(operationLabel)
                .add(3, 3, 3)
                .add(manipulationsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(operationCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(operationGoB))
                .add(1, 1, 1)
                .add(manipulationsPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(combineB)
                    .add(splitB))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        manipulationsPanelLayout.linkSize(new java.awt.Component[] {operationCB, transformationCB}, org.jdesktop.layout.GroupLayout.VERTICAL);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(manipulationsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(628, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(manipulationsPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 192, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel baseLabel;
    private javax.swing.JTextField baseTextBox;
    private javax.swing.JButton combineB;
    private javax.swing.JPanel manipulationsPanel;
    private javax.swing.JComboBox operationCB;
    private javax.swing.JButton operationGoB;
    private javax.swing.JLabel operationLabel;
    private javax.swing.JButton splitB;
    private javax.swing.JLabel transformLabel;
    private javax.swing.JComboBox transformationCB;
    private javax.swing.JButton transformationGoB;
    // End of variables declaration//GEN-END:variables

	@Override
	public boolean isEmbedded() {
		return true;
	}
}
