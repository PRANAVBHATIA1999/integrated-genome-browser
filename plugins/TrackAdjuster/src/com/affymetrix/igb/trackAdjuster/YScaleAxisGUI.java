package com.affymetrix.igb.trackAdjuster;

import java.util.ResourceBundle;

public class YScaleAxisGUI extends javax.swing.JPanel {

	private static final long serialVersionUID = 1L;
	public static final ResourceBundle BUNDLE = ResourceBundle.getBundle("trackAdjuster");
	public TrackAdjusterTab tat;

	/**
	 * Creates new form YScaleAxisGUI
	 */
	public YScaleAxisGUI(TrackAdjusterTab tat) {
		this.tat = tat;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stylegroup = tat.stylegroup;
        DisplayModeButtonGroup = new javax.swing.ButtonGroup();
        VisibleRangeButtonGroup = new javax.swing.ButtonGroup();
        jMenu1 = new javax.swing.JMenu();
        DisplayButtonGroup = new javax.swing.ButtonGroup();
        RangePanel = tat.rangePanel;
        jLabel2 = new javax.swing.JLabel();
        by_valRB_val = tat.vis_bounds_setter.by_valRB;
        by_percentileRB_val = tat.vis_bounds_setter.by_percentileRB;
        rangeSlider = tat.vis_bounds_setter.ValueSlider;
        minValLabel = new javax.swing.JLabel();
        minText = tat.vis_bounds_setter.min_valT;
        maxText = tat.vis_bounds_setter.max_valT;
        maxValLabel = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        RangePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Y Axis Scale (Graph)"));

        jLabel2.setText("Set By:");

        VisibleRangeButtonGroup.add(by_valRB_val);
        by_valRB_val.setSelected(true);
        by_valRB_val.setText("Value");
        by_valRB_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                by_valRB_valActionPerformed(evt);
            }
        });

        VisibleRangeButtonGroup.add(by_percentileRB_val);
        by_percentileRB_val.setText("Percentile");
        by_percentileRB_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                by_percentileRB_valActionPerformed(evt);
            }
        });

        minValLabel.setText("Min:");

        minText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minTextActionPerformed(evt);
            }
        });

        maxText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxTextActionPerformed(evt);
            }
        });

        maxValLabel.setText("Max:");

        org.jdesktop.layout.GroupLayout RangePanelLayout = new org.jdesktop.layout.GroupLayout(RangePanel);
        RangePanel.setLayout(RangePanelLayout);
        RangePanelLayout.setHorizontalGroup(
            RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(RangePanelLayout.createSequentialGroup()
                .add(5, 5, 5)
                .add(RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(RangePanelLayout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(rangeSlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(10, 10, 10))
                    .add(RangePanelLayout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 0, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(by_valRB_val)
                        .add(0, 0, 0)
                        .add(by_percentileRB_val)
                        .add(0, 8, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, RangePanelLayout.createSequentialGroup()
                        .add(minValLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 0, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(minText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(maxValLabel)
                        .add(5, 5, 5)
                        .add(maxText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(4, 4, 4))))
        );

        RangePanelLayout.linkSize(new java.awt.Component[] {maxText, minText}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        RangePanelLayout.setVerticalGroup(
            RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, RangePanelLayout.createSequentialGroup()
                .add(RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(jLabel2)
                    .add(by_valRB_val)
                    .add(by_percentileRB_val))
                .add(10, 10, 10)
                .add(rangeSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(maxText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(maxValLabel)
                    .add(minValLabel)
                    .add(minText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        RangePanelLayout.linkSize(new java.awt.Component[] {maxText, minText}, org.jdesktop.layout.GroupLayout.VERTICAL);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(RangePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, RangePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

	private void by_percentileRB_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_by_percentileRB_valActionPerformed
		if (tat.is_listening) {
			switchView(true);
		}
	}//GEN-LAST:event_by_percentileRB_valActionPerformed

	private void minTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minTextActionPerformed
		if (tat.is_listening) {
			int min;
			int max;
			try {
				min = Integer.parseInt(minText.getText());
				max = Integer.parseInt(maxText.getText());
			} catch (Exception e) {
				return;
			}
			updateRange(min, max);
		}
	}//GEN-LAST:event_minTextActionPerformed

	private void maxTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxTextActionPerformed
		if (tat.is_listening) {
			int min;
			int max;
			try {
				min = Integer.parseInt(minText.getText());
				max = Integer.parseInt(maxText.getText());
			} catch (Exception e) {
				return;
			}
			updateRange(min, max);
		}
	}//GEN-LAST:event_maxTextActionPerformed

	private void by_valRB_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_by_valRB_valActionPerformed
		switchView(false);
	}//GEN-LAST:event_by_valRB_valActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup DisplayButtonGroup;
    private javax.swing.ButtonGroup DisplayModeButtonGroup;
    private javax.swing.JPanel RangePanel;
    private javax.swing.ButtonGroup VisibleRangeButtonGroup;
    private javax.swing.JRadioButton by_percentileRB_val;
    private javax.swing.JRadioButton by_valRB_val;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JTextField maxText;
    private javax.swing.JLabel maxValLabel;
    private javax.swing.JTextField minText;
    private javax.swing.JLabel minValLabel;
    private javax.swing.JSlider rangeSlider;
    private javax.swing.ButtonGroup stylegroup;
    // End of variables declaration//GEN-END:variables

	private void updateRange(int min, int max) {
		if (min < rangeSlider.getMinimum()) {
			rangeSlider.setMinimum(min);
		}
		if (max > rangeSlider.getMaximum()) {
			rangeSlider.setMaximum(max);
		}
	}

	private void switchView(boolean b) {
		if (b) {
			org.jdesktop.layout.GroupLayout layout = (org.jdesktop.layout.GroupLayout) RangePanel.getLayout();
			layout.replace(minText, tat.vis_bounds_setter.min_perT);
			layout.replace(maxText, tat.vis_bounds_setter.max_perT);
			layout.replace(rangeSlider, tat.vis_bounds_setter.PercentSlider);
			minText = tat.vis_bounds_setter.min_perT;
			maxText = tat.vis_bounds_setter.max_perT;
			rangeSlider = tat.vis_bounds_setter.PercentSlider;
		} else {
			org.jdesktop.layout.GroupLayout layout = (org.jdesktop.layout.GroupLayout) RangePanel.getLayout();
			layout.replace(minText, tat.vis_bounds_setter.min_valT);
			layout.replace(maxText, tat.vis_bounds_setter.max_valT);
			layout.replace(rangeSlider, tat.vis_bounds_setter.ValueSlider);
			minText = tat.vis_bounds_setter.min_valT;
			maxText = tat.vis_bounds_setter.max_valT;
			rangeSlider = tat.vis_bounds_setter.ValueSlider;
		}
	}
}
