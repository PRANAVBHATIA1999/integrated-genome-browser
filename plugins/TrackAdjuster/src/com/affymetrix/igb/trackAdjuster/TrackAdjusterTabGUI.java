package com.affymetrix.igb.trackAdjuster;

import com.affymetrix.common.CommonUtils;
import com.affymetrix.genometryImpl.style.ITrackStyleExtended;
import com.affymetrix.genoviz.swing.CustomTitleBorder;
import com.affymetrix.igb.osgi.service.IGBService;
import com.affymetrix.igb.osgi.service.IGBTabPanel;
import com.affymetrix.igb.shared.CollapseExpandAction;
import com.affymetrix.igb.shared.RepackTiersAction;
import com.affymetrix.igb.shared.TierGlyph;
import com.affymetrix.igb.trackAdjuster.TrackAdjusterTab.DisplayType;
import java.awt.Rectangle;
import java.util.List;
import java.util.ResourceBundle;

public class TrackAdjusterTabGUI extends IGBTabPanel {

	private static final long serialVersionUID = 1L;
	public static final ResourceBundle BUNDLE = ResourceBundle.getBundle("trackAdjuster");
	private static final int TAB_POSITION = 3;
	public TrackAdjusterTab sgt;
	private static TrackAdjusterTabGUI singleton;
	private RepackTiersAction repackStub;

	/**
	 * Creates new form SimpleGraphTab1 
	 */
	public TrackAdjusterTabGUI(IGBService _igbService) {
		super(_igbService, BUNDLE.getString("trackAdjusterTab"), BUNDLE.getString("trackAdjusterTab"), false, TAB_POSITION);
		TrackAdjusterTab.init(igbService);
		sgt = TrackAdjusterTab.getSingleton();
		repackStub = new RepackTiersAction(null, null, null) {

			private static final long serialVersionUID = 1L;
		};
		initComponents();
		replaceSelectAllButton();
	}

	public static void init(IGBService igbService) {
		singleton = new TrackAdjusterTabGUI(igbService);
	}

	public static synchronized TrackAdjusterTabGUI getSingleton() {
		return singleton;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stylegroup = sgt.stylegroup;
        DisplayModeButtonGroup = new javax.swing.ButtonGroup();
        VisibleRangeButtonGroup = new javax.swing.ButtonGroup();
        jMenu1 = new javax.swing.JMenu();
        DisplayButtonGroup = new javax.swing.ButtonGroup();
        StylePanel = new javax.swing.JPanel();
        fgLabel = new javax.swing.JLabel();
        fgColorComboBox = sgt.fgColorComboBox;
        bgLabel = new javax.swing.JLabel();
        bgColorComboBox = sgt.bgColorComboBox;
        nameSizeLabel = new javax.swing.JLabel();
        nameSizeComboBox = sgt.trackNameSizeComboBox;
        jLabel3 = new javax.swing.JLabel();
        AnnotationPanel = sgt.annotationPanel;
        jLabel6 = new javax.swing.JLabel();
        maxStackDepthTextField = sgt.maxStackDepthTextField;
        fitViewButton = new javax.swing.JButton();
        collapseButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        graphPanel = new javax.swing.JPanel();
        barB = sgt.barB;
        lineB = sgt.lineB;
        mmavgB = sgt.mmavgB;
        dotB = sgt.dotB;
        PluginRadioButton = sgt.graphPluginB;
        PluginComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        labelCB = sgt.labelCB;
        yaxisCB = sgt.yaxisCB;
        RangePanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        by_valRB_val = sgt.vis_bounds_setter.by_valRB;
        by_percentileRB_val = sgt.vis_bounds_setter.by_percentileRB;
        rangeSlider = sgt.vis_bounds_setter.ValueSlider;
        minValLabel = new javax.swing.JLabel();
        minText = sgt.vis_bounds_setter.min_valT;
        maxText = sgt.vis_bounds_setter.max_valT;
        maxValLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pluginPrefButton = new javax.swing.JButton();
        PluginButton = sgt.pluginB;
        jLabel5 = new javax.swing.JLabel();
        AnnotationButton = sgt.annotationB;
        AutoButton = sgt.autoB;
        jComboBox2 = new javax.swing.JComboBox();
        GraphButton = sgt.graphB;
        floatingCheckBox = sgt.floatCB;
        TopPanel = new javax.swing.JPanel();
        height_slider = sgt.height_slider;
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        selectAllB = new javax.swing.JButton();
        trackNameTextField = sgt.trackName;

        jMenu1.setText("jMenu1");

        StylePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Style"));
        StylePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StylePanelMouseClicked(evt);
            }
        });

        fgLabel.setText("Foreground:");

        fgColorComboBox.setBackground(new java.awt.Color(255, 255, 255));
        fgColorComboBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        fgColorComboBox.setButtonVisible(false);
        fgColorComboBox.setColorValueVisible(false);
        fgColorComboBox.setMaximumSize(new java.awt.Dimension(150, 20));
        fgColorComboBox.setStretchToFit(true);
        fgColorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fgColorComboBoxActionPerformed(evt);
            }
        });

        bgLabel.setText("Background:");

        bgColorComboBox.setBackground(new java.awt.Color(255, 255, 255));
        bgColorComboBox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        bgColorComboBox.setButtonVisible(false);
        bgColorComboBox.setColorValueVisible(false);
        bgColorComboBox.setMaximumSize(new java.awt.Dimension(150, 20));
        bgColorComboBox.setStretchToFit(true);
        bgColorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgColorComboBoxActionPerformed(evt);
            }
        });

        nameSizeLabel.setText("Track Name: ");

        nameSizeComboBox.setModel(sgt.trackNameSizeComboBox.getModel());
        nameSizeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSizeComboBoxtrackNameSizeComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Size:");

        org.jdesktop.layout.GroupLayout StylePanelLayout = new org.jdesktop.layout.GroupLayout(StylePanel);
        StylePanel.setLayout(StylePanelLayout);
        StylePanelLayout.setHorizontalGroup(
            StylePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(StylePanelLayout.createSequentialGroup()
                .add(5, 5, 5)
                .add(StylePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(nameSizeLabel)
                    .add(StylePanelLayout.createSequentialGroup()
                        .add(StylePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(bgLabel)
                            .add(fgLabel))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(StylePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(bgColorComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(fgColorComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(StylePanelLayout.createSequentialGroup()
                        .add(jLabel3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(nameSizeComboBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        StylePanelLayout.setVerticalGroup(
            StylePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(StylePanelLayout.createSequentialGroup()
                .add(StylePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bgLabel)
                    .add(bgColorComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(StylePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(StylePanelLayout.createSequentialGroup()
                        .add(2, 2, 2)
                        .add(fgLabel)
                        .add(4, 4, 4)
                        .add(nameSizeLabel)
                        .add(2, 2, 2))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, StylePanelLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(fgColorComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)))
                .add(StylePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nameSizeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3))
                .add(0, 33, Short.MAX_VALUE))
        );

        AnnotationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Annotation")));
        AnnotationPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnnotationPanelMouseClicked(evt);
            }
        });

        jLabel6.setText("Stack Depth: ");

        maxStackDepthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxStackDepthTextFieldActionPerformed(evt);
            }
        });

        fitViewButton.setText("Fit View");
        fitViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fitViewButtonActionPerformed(evt);
            }
        });

        collapseButton.setText("Collapse");
        collapseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                collapseButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Apply");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout AnnotationPanelLayout = new org.jdesktop.layout.GroupLayout(AnnotationPanel);
        AnnotationPanel.setLayout(AnnotationPanelLayout);
        AnnotationPanelLayout.setHorizontalGroup(
            AnnotationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(AnnotationPanelLayout.createSequentialGroup()
                .add(AnnotationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(AnnotationPanelLayout.createSequentialGroup()
                        .add(jLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(maxStackDepthTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 41, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2))
                    .add(AnnotationPanelLayout.createSequentialGroup()
                        .add(fitViewButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(collapseButton)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        AnnotationPanelLayout.linkSize(new java.awt.Component[] {collapseButton, fitViewButton}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        AnnotationPanelLayout.setVerticalGroup(
            AnnotationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(AnnotationPanelLayout.createSequentialGroup()
                .add(AnnotationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(jLabel6)
                    .add(maxStackDepthTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(AnnotationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(fitViewButton)
                    .add(collapseButton))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        graphPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Graph"));
        graphPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                graphPanelMouseClicked(evt);
            }
        });

        barB.setText("Bar");

        lineB.setText("Line");

        mmavgB.setText("Min/Max/Avg");

        dotB.setText("Dot");

        stylegroup.add(PluginRadioButton);

        PluginComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "HeatMap" }));
        PluginComboBox.setFocusCycleRoot(true);

        jLabel7.setText("Show:");

        labelCB.setText("Label");

        yaxisCB.setText("Y Axis");

        org.jdesktop.layout.GroupLayout graphPanelLayout = new org.jdesktop.layout.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(graphPanelLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(graphPanelLayout.createSequentialGroup()
                        .add(PluginRadioButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(PluginComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, graphPanelLayout.createSequentialGroup()
                            .add(jLabel7)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(labelCB)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(yaxisCB))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, graphPanelLayout.createSequentialGroup()
                            .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(dotB)
                                .add(barB))
                            .add(5, 5, 5)
                            .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(lineB)
                                .add(mmavgB)))))
                .add(20, 20, 20))
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(graphPanelLayout.createSequentialGroup()
                .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(barB)
                    .add(lineB))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(dotB)
                    .add(mmavgB))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(PluginRadioButton)
                    .add(PluginComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(2, 2, 2)
                .add(graphPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(labelCB)
                    .add(jLabel7)
                    .add(yaxisCB)))
        );

        RangePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Visible Range"));
        RangePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RangePanelMouseClicked(evt);
            }
        });

        jLabel2.setText("Set By:");

        VisibleRangeButtonGroup.add(by_valRB_val);
        by_valRB_val.setSelected(true);
        by_valRB_val.setText("Value");
        by_valRB_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                by_valRB_valActionPerformed(evt);
            }
        });

        VisibleRangeButtonGroup.add(by_percentileRB_val);
        by_percentileRB_val.setText("Percentile");
        by_percentileRB_val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                by_percentileRB_valActionPerformed(evt);
            }
        });

        rangeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rangeSliderStateChanged(evt);
            }
        });

        minValLabel.setText("Min:");

        minText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minTextActionPerformed(evt);
            }
        });

        maxText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxTextActionPerformed(evt);
            }
        });

        maxValLabel.setText("Max:");

        org.jdesktop.layout.GroupLayout RangePanelLayout = new org.jdesktop.layout.GroupLayout(RangePanel);
        RangePanel.setLayout(RangePanelLayout);
        RangePanelLayout.setHorizontalGroup(
            RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(RangePanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(RangePanelLayout.createSequentialGroup()
                        .add(minValLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(minText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 48, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(maxValLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(maxText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 4, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, RangePanelLayout.createSequentialGroup()
                        .add(RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                            .add(RangePanelLayout.createSequentialGroup()
                                .add(jLabel2)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(by_valRB_val)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(by_percentileRB_val))
                            .add(rangeSlider, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        RangePanelLayout.linkSize(new java.awt.Component[] {maxText, minText}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        RangePanelLayout.setVerticalGroup(
            RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, RangePanelLayout.createSequentialGroup()
                .add(RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(maxText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(minText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(minValLabel)
                    .add(maxValLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rangeSlider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(RangePanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(jLabel2)
                    .add(by_valRB_val)
                    .add(by_percentileRB_val))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        RangePanelLayout.linkSize(new java.awt.Component[] {maxText, minText}, org.jdesktop.layout.GroupLayout.VERTICAL);

        pluginPrefButton.setIcon(CommonUtils.getInstance().getIcon("images/configure.png"));
        pluginPrefButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pluginPrefButtonActionPerformed(evt);
            }
        });

        DisplayButtonGroup.add(PluginButton);
        PluginButton.setEnabled(false);
        PluginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PluginButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Display As:");

        DisplayButtonGroup.add(AnnotationButton);
        AnnotationButton.setText("Annotation");
        AnnotationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnnotationButtonActionPerformed(evt);
            }
        });

        DisplayButtonGroup.add(AutoButton);
        AutoButton.setText("Auto");
        AutoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AutoButtonActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plugin" }));
        jComboBox2.setEnabled(false);

        DisplayButtonGroup.add(GraphButton);
        GraphButton.setText("Graph");
        GraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraphButtonActionPerformed(evt);
            }
        });

        floatingCheckBox.setText("Floating");
        floatingCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                floatingCheckBoxActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jLabel5)
                .add(5, 5, 5)
                .add(AnnotationButton)
                .add(5, 5, 5)
                .add(GraphButton)
                .add(5, 5, 5)
                .add(AutoButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(PluginButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jComboBox2, 0, 328, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(pluginPrefButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(floatingCheckBox)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                .add(jLabel5)
                .add(AnnotationButton)
                .add(GraphButton)
                .add(AutoButton)
                .add(PluginButton)
                .add(jComboBox2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(pluginPrefButton)
                .add(floatingCheckBox))
        );

        //This allows the Bundle String to be applied,
        //and also the String to appear in the GUI during design.
        AnnotationButton.setText(sgt.annotationB.getText());
        AutoButton.setText(sgt.autoB.getText());
        GraphButton.setText(sgt.graphB.getText());

        height_slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                height_sliderStateChanged(evt);
            }
        });

        jLabel8.setText("Track Name:");

        jLabel1.setText("Height:");

        selectAllB.setText("Select All");

        trackNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackNameTextFieldActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout TopPanelLayout = new org.jdesktop.layout.GroupLayout(TopPanel);
        TopPanel.setLayout(TopPanelLayout);
        TopPanelLayout.setHorizontalGroup(
            TopPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(TopPanelLayout.createSequentialGroup()
                .add(selectAllB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 102, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(height_slider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel8)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(trackNameTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE))
        );
        TopPanelLayout.setVerticalGroup(
            TopPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(TopPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                .add(height_slider, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(jLabel1)
                .add(selectAllB)
                .add(jLabel8)
                .add(trackNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(TopPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(StylePanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(3, 3, 3)
                        .add(AnnotationPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(3, 3, 3)
                        .add(RangePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                        .add(3, 3, 3)
                        .add(graphPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 210, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(TopPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(2, 2, 2)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(0, 0, 0)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, StylePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, AnnotationPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(8, 8, 8))
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, RangePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, graphPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))))
        );

        layout.linkSize(new java.awt.Component[] {AnnotationPanel, RangePanel, StylePanel, graphPanel}, org.jdesktop.layout.GroupLayout.VERTICAL);

        StylePanel.setBorder(new CustomTitleBorder("Style -", "Options"));
        AnnotationPanel.setBorder(new CustomTitleBorder("Annotation -", "Options"));
        graphPanel.setBorder(new CustomTitleBorder("Graph -", "Options"));
        RangePanel.setBorder(new CustomTitleBorder("Visible Range -", "Options"));
    }// </editor-fold>//GEN-END:initComponents

	private void by_percentileRB_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_by_percentileRB_valActionPerformed
		if (sgt.is_listening) {
			switchView(true);
		}
	}//GEN-LAST:event_by_percentileRB_valActionPerformed

	private void fgColorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fgColorComboBoxActionPerformed
		if (sgt.is_listening) {
			sgt.fgColorComboBoxActionPerformed();
		}
}//GEN-LAST:event_fgColorComboBoxActionPerformed

	private void bgColorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgColorComboBoxActionPerformed
		if (sgt.is_listening) {
			sgt.bgColorComboBoxActionPerformed();
		}
	}//GEN-LAST:event_bgColorComboBoxActionPerformed

	private void nameSizeComboBoxtrackNameSizeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSizeComboBoxtrackNameSizeComboBoxActionPerformed
		if (sgt.is_listening) {
			sgt.setNameSize(nameSizeComboBox.getSelectedItem().toString());
		}
	}//GEN-LAST:event_nameSizeComboBoxtrackNameSizeComboBoxActionPerformed

	private void rangeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rangeSliderStateChanged
		// TODO add your handling code here:
	}//GEN-LAST:event_rangeSliderStateChanged

	private void minTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minTextActionPerformed
		if (sgt.is_listening) {
			int min;
			int max;
			try {
				min = Integer.parseInt(minText.getText());
				max = Integer.parseInt(maxText.getText());
			} catch (Exception e) {
				return;
			}
			updateRange(min, max);
		}
	}//GEN-LAST:event_minTextActionPerformed

	private void maxTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxTextActionPerformed
		if (sgt.is_listening) {
			int min;
			int max;
			try {
				min = Integer.parseInt(minText.getText());
				max = Integer.parseInt(maxText.getText());
			} catch (Exception e) {
				return;
			}
			updateRange(min, max);
		}
	}//GEN-LAST:event_maxTextActionPerformed

	private void pluginPrefButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pluginPrefButtonActionPerformed
		// TODO add your handling code here:		
		TrackAdjusterPreferences pp = TrackAdjusterPreferences.getSingleton(igbService);
		pp.setTab(TrackAdjusterPreferences.TAB_DISPLAY_PLUGIN);
		javax.swing.JFrame f = pp.getFrame();
		f.setVisible(true);
	}//GEN-LAST:event_pluginPrefButtonActionPerformed

	private void by_valRB_valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_by_valRB_valActionPerformed
		switchView(false);
	}//GEN-LAST:event_by_valRB_valActionPerformed

	private void trackNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackNameTextFieldActionPerformed
		// TODO add your handling code here:
		if (sgt.is_listening) {
			sgt.setTrackName(trackNameTextField.getText());
		}
	}//GEN-LAST:event_trackNameTextFieldActionPerformed

	private void maxStackDepthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxStackDepthTextFieldActionPerformed
		// TODO add your handling code here:		
		if (sgt.is_listening) {
			sgt.setMaxDepth(maxStackDepthTextField.getText());
		}
	}//GEN-LAST:event_maxStackDepthTextFieldActionPerformed

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:
		if (sgt.is_listening) {
			maxStackDepthTextFieldActionPerformed(evt);
		}
	}//GEN-LAST:event_jButton2ActionPerformed

	private void AnnotationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnnotationButtonActionPerformed
		// TODO add your handling code here:
		if (sgt.is_listening) {
			sgt.setViewMode(DisplayType.ANNOTATION);
		}
	}//GEN-LAST:event_AnnotationButtonActionPerformed

	private void GraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraphButtonActionPerformed
		if (sgt.is_listening) {
			sgt.setViewMode(DisplayType.GRAPH);
		}
	}//GEN-LAST:event_GraphButtonActionPerformed

	private void AutoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AutoButtonActionPerformed
		if (sgt.is_listening) {
			sgt.setViewMode(DisplayType.AUTO);
		}
	}//GEN-LAST:event_AutoButtonActionPerformed

	private void PluginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PluginButtonActionPerformed
		// TODO add your handling code here:
		if (sgt.is_listening) {
			sgt.setViewMode(DisplayType.PLUGIN);
		}
	}//GEN-LAST:event_PluginButtonActionPerformed

	private void floatingCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_floatingCheckBoxActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_floatingCheckBoxActionPerformed

	private void StylePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StylePanelMouseClicked
		// TODO add your handling code here:
		Rectangle bounds = new Rectangle(43, 5, 57, 13);
		if (bounds.contains(evt.getX(), evt.getY())) {
			TrackAdjusterPreferences pp = TrackAdjusterPreferences.getSingleton(igbService);
			pp.setTab(TrackAdjusterPreferences.TAB_STYLE);
			javax.swing.JFrame f = pp.getFrame();
			f.setVisible(true);
		}

	}//GEN-LAST:event_StylePanelMouseClicked

	private void AnnotationPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnotationPanelMouseClicked
		// TODO add your handling code here:
		Rectangle bounds = new Rectangle(85, 5, 55, 13);

		if (bounds.contains(evt.getX(), evt.getY())) {
			TrackAdjusterPreferences pp = TrackAdjusterPreferences.getSingleton(igbService);
			pp.setTab(TrackAdjusterPreferences.TAB_ANNOTATION);
			javax.swing.JFrame f = pp.getFrame();
			f.setVisible(true);
		}
	}//GEN-LAST:event_AnnotationPanelMouseClicked

	private void RangePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RangePanelMouseClicked
		// TODO add your handling code here:
		Rectangle bounds = new Rectangle(100, 5, 53, 13);

		if (bounds.contains(evt.getX(), evt.getY())) {
			TrackAdjusterPreferences pp = TrackAdjusterPreferences.getSingleton(igbService);
			pp.setTab(TrackAdjusterPreferences.TAB_VISIBLE_RANGE);
			javax.swing.JFrame f = pp.getFrame();
			f.setVisible(true);
		}
	}//GEN-LAST:event_RangePanelMouseClicked

	private void graphPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_graphPanelMouseClicked
		// TODO add your handling code here:
		Rectangle bounds = new Rectangle(50, 5, 60, 13);

		if (bounds.contains(evt.getX(), evt.getY())) {
			TrackAdjusterPreferences pp = TrackAdjusterPreferences.getSingleton(igbService);
			pp.setTab(TrackAdjusterPreferences.TAB_GRAPH);
			javax.swing.JFrame f = pp.getFrame();
			f.setVisible(true);
		}
	}//GEN-LAST:event_graphPanelMouseClicked

	private void height_sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_height_sliderStateChanged
		if (sgt.glyphs.isEmpty() || !sgt.is_listening) {
			return;
		}
		sgt.setGraphHeight(height_slider.getValue());
	}//GEN-LAST:event_height_sliderStateChanged

	private void fitViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fitViewButtonActionPerformed
		// TODO add your handling code here:
		int ourOptimum = 1;
		for (TierGlyph tg : sgt.selectedTiers) {
			ourOptimum = Math.max(ourOptimum, tg.getSlotsNeeded(igbService.getSeqMapView().getSeqMap().getView()));
		}
		changeMaxExpand(sgt.selectedTiers, ourOptimum);
	}//GEN-LAST:event_fitViewButtonActionPerformed

	private void collapseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_collapseButtonActionPerformed
		CollapseExpandAction.getAction().actionPerformed(evt);
	}//GEN-LAST:event_collapseButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AnnotationButton;
    private javax.swing.JPanel AnnotationPanel;
    private javax.swing.JRadioButton AutoButton;
    private javax.swing.ButtonGroup DisplayButtonGroup;
    private javax.swing.ButtonGroup DisplayModeButtonGroup;
    private javax.swing.JRadioButton GraphButton;
    private javax.swing.JRadioButton PluginButton;
    private javax.swing.JComboBox PluginComboBox;
    private javax.swing.JRadioButton PluginRadioButton;
    private javax.swing.JPanel RangePanel;
    private javax.swing.JPanel StylePanel;
    private javax.swing.JPanel TopPanel;
    private javax.swing.ButtonGroup VisibleRangeButtonGroup;
    private javax.swing.JRadioButton barB;
    private com.jidesoft.combobox.ColorComboBox bgColorComboBox;
    private javax.swing.JLabel bgLabel;
    private javax.swing.JRadioButton by_percentileRB_val;
    private javax.swing.JRadioButton by_valRB_val;
    private javax.swing.JButton collapseButton;
    private javax.swing.JRadioButton dotB;
    private com.jidesoft.combobox.ColorComboBox fgColorComboBox;
    private javax.swing.JLabel fgLabel;
    private javax.swing.JButton fitViewButton;
    private javax.swing.JCheckBox floatingCheckBox;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JSlider height_slider;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JCheckBox labelCB;
    private javax.swing.JRadioButton lineB;
    private javax.swing.JTextField maxStackDepthTextField;
    private javax.swing.JTextField maxText;
    private javax.swing.JLabel maxValLabel;
    private javax.swing.JTextField minText;
    private javax.swing.JLabel minValLabel;
    private javax.swing.JRadioButton mmavgB;
    private javax.swing.JComboBox nameSizeComboBox;
    private javax.swing.JLabel nameSizeLabel;
    private javax.swing.JButton pluginPrefButton;
    private javax.swing.JSlider rangeSlider;
    private javax.swing.JButton selectAllB;
    private javax.swing.ButtonGroup stylegroup;
    private javax.swing.JTextField trackNameTextField;
    private javax.swing.JCheckBox yaxisCB;
    // End of variables declaration//GEN-END:variables

	private void updateRange(int min, int max) {
		if (min < rangeSlider.getMinimum()) {
			rangeSlider.setMinimum(min);
		}
		if (max > rangeSlider.getMaximum()) {
			rangeSlider.setMaximum(max);
		}
	}

	@Override
	public boolean isEmbedded() {
		return true;
	}

	private void switchView(boolean b) {
		if (b) {
			org.jdesktop.layout.GroupLayout layout = (org.jdesktop.layout.GroupLayout) RangePanel.getLayout();
			layout.replace(minText, sgt.vis_bounds_setter.min_perT);
			layout.replace(maxText, sgt.vis_bounds_setter.max_perT);
			layout.replace(rangeSlider, sgt.vis_bounds_setter.PercentSlider);
			minText = sgt.vis_bounds_setter.min_perT;
			maxText = sgt.vis_bounds_setter.max_perT;
			rangeSlider = sgt.vis_bounds_setter.PercentSlider;
		} else {
			org.jdesktop.layout.GroupLayout layout = (org.jdesktop.layout.GroupLayout) RangePanel.getLayout();
			layout.replace(minText, sgt.vis_bounds_setter.min_valT);
			layout.replace(maxText, sgt.vis_bounds_setter.max_valT);
			layout.replace(rangeSlider, sgt.vis_bounds_setter.ValueSlider);
			minText = sgt.vis_bounds_setter.min_valT;
			maxText = sgt.vis_bounds_setter.max_valT;
			rangeSlider = sgt.vis_bounds_setter.ValueSlider;
		}
	}

	private void replaceSelectAllButton() {
		org.jdesktop.layout.GroupLayout layout = (org.jdesktop.layout.GroupLayout) TopPanel.getLayout();
		layout.replace(selectAllB, sgt.selectAllB);
	}

	private void changeMaxExpand(List<TierGlyph> selectedTiers, int max) {
		for (TierGlyph tier : selectedTiers) {
			ITrackStyleExtended style = tier.getAnnotStyle();
			switch (tier.getDirection()) {
				case FORWARD:
					style.setForwardMaxDepth(max);
					break;
				case REVERSE:
					style.setReverseMaxDepth(max);
					break;
				default:
				case BOTH:
				case NONE:
				case AXIS:
					style.setMaxDepth(max);
			}
			repackStub.repack(true);
			String depth = "" + max;
			maxStackDepthTextField.setText(depth);
		}
	}
}
